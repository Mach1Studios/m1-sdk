language: cpp
env:
  global:
    - secure: xq88wTHbDzhUaA8KEVVLtiETOccPOShPlWdcuJIvsGRKSSLI8hSDhGR0ZFWrvpx56t6lgrqVrEOUqIoLLDM06mltNBpe+218lKs3wKnNuxET8MrZ6m05oC6n0uavXIgnxbC8mChYqeZHd2mQ0riGfPsxue9GIKsiq27WZvuB+AdoYE4HvuOrRPYN63EeiAhx4BnY31GlEGbiEd0zFsDmTI8lL3boCZ/P4aK/SYdCV3BfJ0VkqT+UNo2HWnOBJAR1A63cu0gznmLNG2gv1Wd9gxntbPKXaa2Qc/HtIqOab4Jyl+TIzh5582s+oPgIgX8349/0n1o5dNmjWu64j02LwynV87+aflyK8P9kYCdnJosPjjktEM4L8kWOpVrH+0Go8VDdLf3Ar9C0f1urQ27g+fCIMRO7xPN7sceLP1c2L7LNUp2wx2ItTovJhcZa1cb6OmXbVURsjRCum8WYXpkJ08Tu34roPX45avLMh2JCf7dzJ3EoUhnd43/o+E+Eme4Nes0fYMAQEKK881C9uQljcuYmKuJ/uOTvStP68fOYvc1xnb3RT/OpHvaX6dX5QKrBZnk0fVWMcLtxfT3lvdtt5u73gWcdu+kzBXdEtwpGajeSXlPdhUOzDukccatQrQt97eybFdUC/9C04FLQ4OlBNpS+VFELaBkfJsNq0ThPQFo=

branches:
  only:
    - develop
    - deploy
    - master

git:
  lfs_skip_smudge: true
  depth: 5

before_script:
  - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  - eval "${MATRIX_EVAL}"

after_script:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then cd ${TRAVIS_BUILD_DIR}/source && ./scripts/remove_signing_key.sh; fi

stages:
  - name: test
  - name: compile
    if: branch = deploy
  - name: deploy
    if: branch = deploy
  - name: release
    if: branch = master

jobs:
  include:
    - stage: test
      name: Test Compile Libs
      os: linux
      sudo: required
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - build-essential
            - g++-7
            - cmake
      env:
        - MATRIX_EVAL="CC=gcc-7 CXX=g++-7"
      git:
        submodules: false
      script:
        - cd ${TRAVIS_BUILD_DIR}/source
        - ./scripts/linux_simpletest.sh

    - stage: compile
      name: Linux x86_64
      os: linux
      sudo: required
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - build-essential
            - g++-7
            - libsndfile-dev
            - librtaudio-dev
            - libpthread-stubs0-dev
            - rsync
            - awscli
            - cmake
      env:
        - MATRIX_EVAL="CC=gcc-7 CXX=g++-7"
      before_install: 
        - git lfs pull --include "m1-debug-shortpt-fiveone.wav"
      script:
        - cd ${TRAVIS_BUILD_DIR}/source
        - ./scripts/linux_test.sh
        - ./scripts/linux_build.sh
      after_success:
        - ./scripts/examples_linking_test.sh

    - stage: compile
      name: Linux ARM64
      os: linux
      sudo: required
      arch: arm64
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - build-essential
            - libsndfile-dev
            - librtaudio-dev
            - libpthread-stubs0-dev
            - rsync
            - awscli
            - gcc-arm-linux-gnueabi
            - gcc-arm-linux-gnueabihf
            - lib32z1
            - lib32ncurses5
            - binutils
            - binutils-source
            - patch
            - libssl-dev
            - bc
            - flex
            - bison
            - gawk
            - libncurses5-dev
            - gettext
            - autoconf
            - texinfo
            - cmake
          update: true
      env:
        - CROSS_COMPILE=arm-none-eabi-
        - CC=$(CROSS_COMPILE)gcc 
        - CXX=$(CROSS_COMPILE)g++
      before_install:
        - git lfs pull --include "m1-debug-shortpt-fiveone.wav"
      install:
        - export PATH=/usr/local/bin:$PATH
        - sudo apt remove binutils-arm-none-eabi gcc-arm-none-eabi libnewlib-arm-none-eabi
        - cd ${TRAVIS_BUILD_DIR}
        - wget --quiet https://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2018q2/gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz2
        - tar -xf gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz2
        - cd gcc-arm-none-eabi-7-2018-q2-update
        - export PATH=${TRAVIS_BUILD_DIR}/gcc-arm-none-eabi-7-2018-q2-update/bin/:$PATH
      script:
        - cd ${TRAVIS_BUILD_DIR}/source
        - ./scripts/linux_test.sh
        - ./scripts/linux-arm_build.sh
        - ./scripts/arm-cortexm0_build.sh
        # - export CROSS_COMPILE=/usr/bin/arm-linux-gnueabihf-
        # - ./scripts/arm-hf_build.sh
        # - ./scripts/arm-hf-neon-vfpv4_build.sh

    - stage: compile
      name: macOS 9.3 (macOS 10.13)
      os: osx
      sudo: required
      osx_image: xcode9.3
      env:
        - HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=1
        - MACOSX_DEPLOYMENT_TARGET=10.9
      before_install:
          - if [ "$TRAVIS_OS_NAME" == "osx" ]; then cd ${TRAVIS_BUILD_DIR}/source/scripts && openssl aes-256-cbc -K $encrypted_b7b9d4064d90_key -iv $encrypted_b7b9d4064d90_iv -in certs/secrets.tar.enc -out certs/secrets.tar -d; fi
          - if [ "$TRAVIS_OS_NAME" == "osx" ]; then cd ${TRAVIS_BUILD_DIR}/source && ./scripts/add_signing_key.sh; fi
      install: 
        - cd ${TRAVIS_BUILD_DIR}/source
        - ./scripts/macos_setup.sh
        - sudo pip install --upgrade pip
        - sudo python -m pip install awscli --ignore-installed six
      script:
        - cd ${TRAVIS_BUILD_DIR}/source
        - ./scripts/macos-10-13_test.sh
        - ./scripts/macos-10-13_build.sh
      after_success:
        - cd ${TRAVIS_BUILD_DIR}/source
        - ./scripts/examples_linking_test.sh

    - stage: compile
      name: macOS 9.3 (iOS)
      os: osx
      sudo: required
      osx_image: xcode9.3
      env:
        - HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=1
        - MACOSX_DEPLOYMENT_TARGET=10.9
        - IOS_DEVELOPMENT_TEAM="6ZETDT84RB"
        - IOS_BUNDLE_IDENTIFIER="com.mach1.lib"
      before_install:
          - if [ "$TRAVIS_OS_NAME" == "osx" ]; then cd ${TRAVIS_BUILD_DIR}/source/scripts && openssl aes-256-cbc -K $encrypted_b7b9d4064d90_key -iv $encrypted_b7b9d4064d90_iv -in certs/secrets.tar.enc -out certs/secrets.tar -d; fi
          - if [ "$TRAVIS_OS_NAME" == "osx" ]; then cd ${TRAVIS_BUILD_DIR}/source && ./scripts/add_signing_key.sh; fi
      install: 
        - cd ${TRAVIS_BUILD_DIR}/source
        - ./scripts/macos_setup.sh
        - sudo pip install --upgrade pip
        - sudo python -m pip install awscli --ignore-installed six
      script:
        - cd ${TRAVIS_BUILD_DIR}/source
        - ./scripts/macos-10-13_test.sh
        - ./scripts/ios_build.sh
      after_success:
        - cd ${TRAVIS_BUILD_DIR}/source
        - ./scripts/examples_linking_test.sh

    - stage: compile
      name: macOS 13.2 (macOS)
      os: osx
      addons:
        homebrew:
          packages:
            - libsndfile
            - rtaudio
            - cmake
            - gcc
            - libpthread-stubs
            - git-lfs
            - rsync
            - awscli
      env:
        - MATRIX_EVAL="CC=gcc CXX=g++"
      osx_image: xcode13.2
      before_install:
        - git lfs pull --include "m1-debug-shortpt-fiveone.wav"
      install:
        - cd ${TRAVIS_BUILD_DIR}
        - git lfs install && git lfs pull
      script:
        - cd ${TRAVIS_BUILD_DIR}/source
        - ./scripts/macos_test.sh
        - ./scripts/macos_build.sh
      after_success:
        - ./scripts/examples_linking_test.sh

    - stage: compile
      name: macOS 13.2 (RPI)
      os: osx
      addons:
        homebrew:
          packages:
            - libsndfile
            - rtaudio
            - cmake
            - gcc
            - libpthread-stubs
            - git-lfs
            - rsync
            - awscli
      env:
        - MATRIX_EVAL="CC=gcc CXX=g++"
      osx_image: xcode13.2
      before_install:
        - git lfs pull --include "m1-debug-shortpt-fiveone.wav"
        # Install polly
        - cd ${TRAVIS_BUILD_DIR}
        - git clone https://github.com/Mach1Studios/polly.git
        - POLLY_SOURCE_DIR=${TRAVIS_BUILD_DIR}/polly
        - export POLLY_SOURCE_DIR=${TRAVIS_BUILD_DIR}/polly
        - PATH=${TRAVIS_BUILD_DIR}/polly/bin/polly:$PATH
      install:
        - cd ${TRAVIS_BUILD_DIR}
        - git clone https://github.com/pretyman/raspberrypi2-mac-crosscompiler raspberrypi-tools
        - export RASPBERRYPI_CROSS_COMPILE_TOOLCHAIN_PATH=${TRAVIS_BUILD_DIR}/raspberrypi-tools/x-tools/arm-unknown-linux-gnueabihf/bin/
        - export RASPBERRYPI_CROSS_COMPILE_TOOLCHAIN_PREFIX=arm-unknown-linux-gnueabihf
        - export RASPBERRYPI_CROSS_COMPILE_SYSROOT=${TRAVIS_BUILD_DIR}/raspberrypi-tools/x-tools/arm-unknown-linux-gnueabihf/arm-unknown-linux-gnueabihf/sysroot
        - git lfs install && git lfs pull
      script:
        - cd ${TRAVIS_BUILD_DIR}/source
        - ./scripts/macos_test.sh
        - export CMAKE_C_COMPILER=$RASPBERRYPI_CROSS_COMPILE_TOOLCHAIN_PATH/arm-unknown-linux-gnueabihf-gcc
        - export CMAKE_CXX_COMPILER=$RASPBERRYPI_CROSS_COMPILE_TOOLCHAIN_PATH/arm-unknown-linux-gnueabihf-g++
        - ./scripts/rpi_build.sh
      after_success:
        - ./scripts/examples_linking_test.sh

    - stage: compile
      name: macOS 13.2 (WASM/JS)
      os: osx
      addons:
        homebrew:
          packages:
            - libsndfile
            - rtaudio
            - cmake
            - gcc
            - libpthread-stubs
            - git-lfs
            - rsync
            - awscli
      env:
        - MATRIX_EVAL="CC=gcc CXX=g++"
      osx_image: xcode13.2
      before_install:
        - git lfs pull --include "m1-debug-shortpt-fiveone.wav"
      install:
        - cd ${TRAVIS_BUILD_DIR}
        - git clone https://github.com/emscripten-core/emsdk.git
        - cd emsdk && git pull
        - ./emsdk install latest
        - ./emsdk activate latest
        - source ./emsdk_env.sh
        - git lfs install && git lfs pull
      script:
        - cd ${TRAVIS_BUILD_DIR}/source
        - ./scripts/macos_test.sh
        - ./scripts/web_build.sh
      after_success:
        - ./scripts/examples_linking_test.sh

    - stage: compile
      name: Android
      os: linux
      language: android
      dist: trusty
      sudo: true
      android:
        components:
          - tools
          - platform-tools
          - build-tools-21.1.2
          - android-21
          - add-on
          - extra
      licenses:
        - 'android-sdk-preview-license-.+'
        - 'android-sdk-license-.+'
      addons:
        apt:
          - build-essential
          - libsndfile-dev
          - librtaudio-dev
          - rsync
          - cmake
        update: true
      env: 
        - MATRIX_EVAL="CC=gcc-7 CXX=g++-7 ANDROID_NDK_r16b=${TRAVIS_BUILD_DIR}/android-ndk-r16b"
      before_install:
        - git lfs pull --include "m1-debug-shortpt-fiveone.wav"
      install: 
        - cd ${TRAVIS_BUILD_DIR}
        - echo y | sdkmanager 'ndk;21.1.6352462'
        - echo y | sdkmanager "cmake;3.10.2.4988404"
        - wget --quiet https://dl.google.com/android/repository/android-ndk-r16b-linux-x86_64.zip
        - unzip -qq android-ndk-r16b-linux-x86_64.zip
        - export ANDROID_NDK_HOME=`pwd`/android-ndk-r16b
        - export ANDROID_NDK_r16b=`pwd`/android-ndk-r16b
        - export LOCAL_ANDROID_NDK_HOME="$ANDROID_NDK_HOME"
        - export LOCAL_ANDROID_NDK_HOST_PLATFORM="linux-x86_64"
        - export PATH=$PATH:${ANDROID_NDK_HOME}
        - sudo apt-get update
        - sudo apt-get install awscli
      script:
        # Android Build on linux
        - cd ${TRAVIS_BUILD_DIR}/source
        - ./scripts/linux_test.sh
        - ./scripts/android_build.sh

    - stage: compile
      name: Windows
      os: windows
      language: sh
      env:
        - VS15=true
      before_install:
        - git clone https://github.com/pyenv-win/pyenv-win.git $HOME/.pyenv
        - export PATH="$HOME/.pyenv/pyenv-win/bin:$HOME/.pyenv/pyenv-win/shims:$PATH"
        - pyenv install -q 3.7.1
        - pyenv rehash
        - pyenv local 3.7.1
        - python --version
        - pip install requests
        - git lfs pull --include "m1-debug-shortpt-fiveone.wav"
      install:
        - cd ${TRAVIS_BUILD_DIR}/source
        - choco install -y cmake
        - choco install -y make
        - choco install -y libsndfile
        - choco install -y rsync
        - choco install -y awscli
        - export PATH="$(powershell -Command '("Process", "Machine" | % {[Environment]::GetEnvironmentVariable("PATH", $_) -Split ";" -Replace "\\$", ""} | Select -Unique | % { cygpath $_ }) -Join ":"')"
      script:
        # WINDOWS BUILDS
        - cd ${TRAVIS_BUILD_DIR}/source
        - ./scripts/winx86_test.sh
        - ./scripts/winx86_build.sh

    - stage: compile
      name: m1-transcode Linux-x86_64
      os: linux
      sudo: required
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - build-essential
            - g++-7
            - libsndfile-dev
            - libpthread-stubs0-dev
            - rsync
            - awscli
            - libboost-all-dev
            - cmake
          update: true
      git:
        submodules: false
      before_install:
        - ./check_changed.sh ../public ; RETURN_CODE=$? ; if [ $RETURN_CODE -eq 137 ]; then travis_terminate 0; elif [ $RETURN_CODE -ne 0 ]; then travis_terminate $RETURN_CODE; fi
      script:
        - cd ${TRAVIS_BUILD_DIR}/../
        - git clone git@github.com:Mach1Studios/m1-transcodertools.git
        - cd ${TRAVIS_BUILD_DIR}/../m1-transcodertools/m1-transcode
        - ./setup.sh
        - cmake .
        - cmake --build .
      after_success:
        - cd ${TRAVIS_BUILD_DIR}/../m1-transcodertools/m1-transcode
        - cp -f ./m1-transcode ${TRAVIS_BUILD_DIR}/executables/unix/m1-transcode
        - aws s3 cp m1-transcode s3://${AWS_DEPLOY_BUCKET}/executables/linux-arm/m1-transcode --cache-control no-cache --metadata-directive REPLACE

    - stage: compile
      name: m1-transcode Linux-ARM64
      os: linux
      sudo: required
      arch: arm64
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - build-essential
            - libsndfile-dev
            - libpthread-stubs0-dev
            - rsync
            - awscli
            - gcc-arm-linux-gnueabi
            - binutils
            - patch
            - libssl-dev
            - bc
            - flex
            - bison
            - gawk
            - libncurses5-dev
            - gettext
            - autoconf
            - texinfo
            - libboost-all-dev
            - cmake
          update: true
      env:
        - CROSS_COMPILE=arm-none-eabi-
        - CC=$(CROSS_COMPILE)gcc 
        - CXX=$(CROSS_COMPILE)g++
      git:
        submodules: false
      before_install: 
        - ./check_changed.sh ../public ; RETURN_CODE=$? ; if [ $RETURN_CODE -eq 137 ]; then travis_terminate 0; elif [ $RETURN_CODE -ne 0 ]; then travis_terminate $RETURN_CODE; fi
      install:
        - sudo apt remove binutils-arm-none-eabi gcc-arm-none-eabi libnewlib-arm-none-eabi
        - cd ${TRAVIS_BUILD_DIR}
        - wget --quiet https://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2018q2/gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz2
        - tar -xf gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz2
        - cd gcc-arm-none-eabi-7-2018-q2-update
        - export PATH=${TRAVIS_BUILD_DIR}/gcc-arm-none-eabi-7-2018-q2-update/bin/:$PATH
      script:
        - cd ${TRAVIS_BUILD_DIR}/../
        - git clone git@github.com:Mach1Studios/m1-transcodertools.git
        - cd ${TRAVIS_BUILD_DIR}/../m1-transcodertools/m1-transcode
        - ./setup.sh
        - cmake .
        - cmake --build .
      after_success:
        - cd ${TRAVIS_BUILD_DIR}/../m1-transcodertools/m1-transcode
        - cp -f ./m1-transcode ${TRAVIS_BUILD_DIR}/executables/linux-arm/m1-transcode
        - aws s3 cp m1-transcode s3://${AWS_DEPLOY_BUCKET}/executables/linux-arm/m1-transcode --cache-control no-cache --metadata-directive REPLACE

    - stage: compile
      name: m1-transcode Windows
      os: windows
      language: sh
      env:
        - VS15=true
      git:
        submodules: false
      before_install:
        - ./check_changed.sh ../public ; RETURN_CODE=$? ; if [ $RETURN_CODE -eq 137 ]; then travis_terminate 0; elif [ $RETURN_CODE -ne 0 ]; then travis_terminate $RETURN_CODE; fi
        - git clone https://github.com/pyenv-win/pyenv-win.git $HOME/.pyenv
        - export PATH="$HOME/.pyenv/pyenv-win/bin:$HOME/.pyenv/pyenv-win/shims:$PATH"
        - pyenv install -q 3.7.2
        - pyenv rehash
        - pyenv global 3.7.2
        - python --version
        - python -m pip install --upgrade pip
        - python -m pip install requests
        - git clone https://github.com/Microsoft/vcpkg.git ${TRAVIS_BUILD_DIR}/vcpkg
        - cd ${TRAVIS_BUILD_DIR}
        - ./vcpkg/bootstrap-vcpkg.bat
        - git lfs pull --include "m1-debug-shortpt-fiveone.wav"
      install:
        - cd ${TRAVIS_BUILD_DIR}/source
        - choco uninstall -y cmake.install
        - choco install -y cmake --version=3.20.2 --installargs 'ADD_CMAKE_TO_PATH=System'
        - choco install -y make
        - choco install -y awscli
        - choco install -y boost-msvc-14.1
        - choco install -y pkgconfiglite
        - export PATH="$(powershell -Command '("Process", "Machine" | % {[Environment]::GetEnvironmentVariable("PATH", $_) -Split ";" -Replace "\\$", ""} | Select -Unique | % { cygpath $_ }) -Join ":"')"
      script:
        - cd ${TRAVIS_BUILD_DIR}/../
        - git clone git@github.com:Mach1Studios/m1-transcodertools.git
        - cd ${TRAVIS_BUILD_DIR}/../m1-transcodertools/m1-transcode
        - mkdir libs && cd libs
        - git clone git@github.com:ebu/libadm.git
        - cd libadm && mkdir build && cd build
        - cmake ..
        - cmake --build . --target install
        - cd ${TRAVIS_BUILD_DIR}/../m1-transcodertools/m1-transcode/libs
        - git clone git@github.com:irt-open-source/libbw64.git
        - cd libbw64 && mkdir build && cd build
        - cmake ..
        - cmake --build . --target install
        - cd ${TRAVIS_BUILD_DIR}/../m1-transcodertools/m1-transcode/libs
        - git clone git@github.com:libsndfile/libsndfile.git
        - cd libsndfile && mkdir build && cd build
        - cmake .. -DENABLE_PACKAGE_CONFIG=ON -DCMAKE_TOOLCHAIN_FILE=${TRAVIS_BUILD_DIR}/vcpkg/scripts/buildsystems/vcpkg.cmake
        - cmake --build . --target install -DENABLE_PACKAGE_CONFIG=ON -DCMAKE_TOOLCHAIN_FILE=${TRAVIS_BUILD_DIR}/vcpkg/scripts/buildsystems/vcpkg.cmake
        - cd ${TRAVIS_BUILD_DIR}/../m1-transcodertools/m1-transcode
        - aws s3 sync s3://${AWS_DEPLOY_BUCKET}/deps/libsndfile ./libs/libsndfile
        - ${POLLY_SOURCE_DIR}/bin/polly.py --clear --install --config Release --toolchain vs-15-2017
        - ${POLLY_SOURCE_DIR}/bin/polly.py --clear --install --config Release --toolchain vs-15-2017-win64
      after_success:
        - cd ${TRAVIS_BUILD_DIR}/../m1-transcodertools/m1-transcode
        - cp -f _install/vs-15-2017/bin/m1-transcode.exe ${TRAVIS_BUILD_DIR}/executables/windows-x86/m1-transcode.exe
        - cp -f _install/vs-15-2017-win64/bin/m1-transcode.exe ${TRAVIS_BUILD_DIR}/executables/windows-x86_64/m1-transcode.exe
        - aws s3 sync _install/vs-15-2017/bin/m1-transcode.exe s3://${AWS_DEPLOY_BUCKET}/executables/windows-x86/m1-transcode --cache-control no-cache --metadata-directive REPLACE
        - aws s3 sync _install/vs-15-2017-win64/bin/m1-transcode.exe s3://${AWS_DEPLOY_BUCKET}/executables/windows-x86_64/m1-transcode --cache-control no-cache --metadata-directive REPLACE

    - stage: compile
      name: m1-transcode macOS
      os: osx
      addons:
        homebrew:
          packages:
            - libsndfile
            - cmake
            - gcc
            - libpthread-stubs
            - git-lfs
            - rsync
            - awscli
      osx_image: xcode13.2
      git:
        submodules: false
      before_install:
        - ./check_changed.sh ../public ; RETURN_CODE=$? ; if [ $RETURN_CODE -eq 137 ]; then travis_terminate 0; elif [ $RETURN_CODE -ne 0 ]; then travis_terminate $RETURN_CODE; fi
      install:
        - brew tap irt-open-source/homebrew-nga
        - brew install libadm libbw64
      script:
        - cd ${TRAVIS_BUILD_DIR}/../
        - git clone git@github.com:Mach1Studios/m1-transcodertools.git
        - cd ${TRAVIS_BUILD_DIR}/../m1-transcodertools/m1-transcode
        - ./setup.sh
        - cmake .
        - cmake --build .
      after_success:
        - cd ${TRAVIS_BUILD_DIR}/../m1-transcodertools/m1-transcode
        - chmod +x ./m1-transcode
        - cp -f ./m1-transcode ${TRAVIS_BUILD_DIR}/executables/unix/m1-transcode
        - aws s3 cp m1-transcode s3://${AWS_DEPLOY_BUCKET}/executables/unix/m1-transcode --cache-control no-cache --metadata-directive REPLACE

    - stage: deploy
      name: Aggregate & Deploy Libs
      os: linux
      sudo: required
      dist: bionic
      addons:
        apt:
          packages:
            - rsync
            - awscli
          update: true
      install:
        - cd ${TRAVIS_BUILD_DIR}/source && ./scripts/git-prepare-submodules.sh
        - git config user.email "whatsup@mach1.tech"
        - git config user.name "Mach1-Bot"
      script:
        - cd ${TRAVIS_BUILD_DIR}
        - aws s3 cp s3://${AWS_DEPLOY_BUCKET}/mach1spatial-libs mach1spatial-libs_pulldown --recursive
        - rsync -arv mach1spatial-libs_pulldown/ mach1spatial-libs
        - rm -rf mach1spatial-libs_pulldown/
        - aws s3 cp s3://${AWS_DEPLOY_BUCKET}/executables executables_pulldown --recursive
        - rsync -arv executables_pulldown/ executables
        - rm -rf executables_pulldown/
      after_success:
        - cd ${TRAVIS_BUILD_DIR}/source && ./scripts/copy_includes_dev.sh
        - cd ${TRAVIS_BUILD_DIR}/source && ./scripts/copy_libs_to_examples.sh
        - cd ${TRAVIS_BUILD_DIR}/examples/mach1spatial-c/ios/Pod-Mach1SpatialAPI && ${TRAVIS_BUILD_DIR}/source/scripts/git-pod-module.sh
        - cd ${TRAVIS_BUILD_DIR}/examples/mach1spatial-c/android/JitPack-Mach1SpatialAPI && ${TRAVIS_BUILD_DIR}/source/scripts/git-jitpack-module.sh
        - cd ${TRAVIS_BUILD_DIR}/examples/mach1spatial-c/Unity/Unity-Mach1SpatialAPI && ${TRAVIS_BUILD_DIR}/source/scripts/git-unity-module.sh
        - cd ${TRAVIS_BUILD_DIR}/examples/mach1spatial-c/Unreal\ Engine/UE-Mach1SpatialAPI && ${TRAVIS_BUILD_DIR}/source/scripts/git-ue-module.sh
        - cd ${TRAVIS_BUILD_DIR}/examples/mach1spatial-web/m1-web-spatialaudioplayer && ${TRAVIS_BUILD_DIR}/source/scripts/git-webplayer-module.sh
        - cd ${TRAVIS_BUILD_DIR}/examples/mach1spatial-nodejs/mach1spatial-decode && ${TRAVIS_BUILD_DIR}/source/scripts/git-node-decode-module.sh
        # - cd ${TRAVIS_BUILD_DIR}/examples/mach1spatial-nodejs/mach1spatial-encode && ${TRAVIS_BUILD_DIR}/source/scripts/git-node-encode-module.sh
        - cd ${TRAVIS_BUILD_DIR}/examples/mach1spatial-nodejs/mach1spatial-transcode && ${TRAVIS_BUILD_DIR}/source/scripts/git-node-transcode-module.sh
        - cd ${TRAVIS_BUILD_DIR} && ./source/scripts/deploy.sh

    - stage: release
      name: Aggregate & Release Libs on public repo
      os: linux
      sudo: required
      dist: bionic
      addons:
        apt:
          packages:
            - rsync
            - awscli
          update: true
      install:
        - git config user.email "whatsup@mach1.tech"
        - git config user.name "Mach1-Bot"
        - cd ${TRAVIS_BUILD_DIR}/../
        - git clone --recurse-submodules -j8 git@github.com:Mach1Studios/m1-sdk.git m1-sdk-release
        - cd ${TRAVIS_BUILD_DIR}/../m1-sdk-release/
        # Switch to each submodule and prepare a tmp branch for pushing and merging safely
        - cd ${TRAVIS_BUILD_DIR}/../m1-sdk-release/examples/mach1spatial-c/ios/Pod-Mach1SpatialAPI && git fetch && git checkout -b tmp
        - cd ${TRAVIS_BUILD_DIR}/../m1-sdk-release/examples/mach1spatial-c/android/JitPack-Mach1SpatialAPI && git fetch && git checkout -b tmp
        - cd ${TRAVIS_BUILD_DIR}/../m1-sdk-release/examples/mach1spatial-web/m1-web-spatialaudioplayer && git fetch && git checkout -b tmp
        - cd ${TRAVIS_BUILD_DIR}/../m1-sdk-release/examples/mach1spatial-nodejs/mach1spatial-decode && git fetch && git checkout -b tmp
        - cd ${TRAVIS_BUILD_DIR}/../m1-sdk-release/examples/mach1spatial-nodejs/mach1spatial-encode && git fetch && git checkout -b tmp
        - cd ${TRAVIS_BUILD_DIR}/../m1-sdk-release/examples/mach1spatial-nodejs/mach1spatial-transcode && git fetch && git checkout -b tmp
        # Setup tmp branch for root repo
        - cd ${TRAVIS_BUILD_DIR}/../m1-sdk-release/ && git fetch && git checkout -b tmp
      script:
        - cd ${TRAVIS_BUILD_DIR}/../m1-sdk-release
        - aws s3 cp s3://${AWS_DEPLOY_BUCKET}/mach1spatial-libs ${TRAVIS_BUILD_DIR}/../m1-sdk-release/mach1spatial-libs_pulldown --recursive
        - rsync -arv ${TRAVIS_BUILD_DIR}/../m1-sdk-release/mach1spatial-libs_pulldown/ ${TRAVIS_BUILD_DIR}/../m1-sdk-release/mach1spatial-libs
        - rm -rf ${TRAVIS_BUILD_DIR}/../m1-sdk-release/mach1spatial-libs_pulldown/
        - aws s3 cp s3://${AWS_DEPLOY_BUCKET}/executables ${TRAVIS_BUILD_DIR}/../m1-sdk-release/executables_pulldown --recursive
        - rsync -arv ${TRAVIS_BUILD_DIR}/../m1-sdk-release/executables_pulldown/ executables
        - rm -rf ${TRAVIS_BUILD_DIR}/../m1-sdk-release/executables_pulldown/
      after_success:
        - cd ${TRAVIS_BUILD_DIR}/source && ./scripts/copy_includes_dev.sh
        - cd ${TRAVIS_BUILD_DIR}/source && ./scripts/copy_libs_to_examples.sh
        - cd ${TRAVIS_BUILD_DIR}/../m1-sdk-release/examples/mach1spatial-c/ios/Pod-Mach1SpatialAPI && ${TRAVIS_BUILD_DIR}/source/scripts/git-pod-module.sh
        - cd ${TRAVIS_BUILD_DIR}/../m1-sdk-release/examples/mach1spatial-c/android/JitPack-Mach1SpatialAPI && ${TRAVIS_BUILD_DIR}/source/scripts/git-jitpack-module.sh
        - cd ${TRAVIS_BUILD_DIR}/../m1-sdk-release/examples/mach1spatial-web/m1-web-spatialaudioplayer && ${TRAVIS_BUILD_DIR}/source/scripts/git-webplayer-module.sh
        - cd ${TRAVIS_BUILD_DIR}/../m1-sdk-release/examples/mach1spatial-nodejs/mach1spatial-decode && ${TRAVIS_BUILD_DIR}/source/scripts/git-node-decode-module.sh
        # - cd ${TRAVIS_BUILD_DIR}/../m1-sdk-release/examples/mach1spatial-nodejs/mach1spatial-encode && ${TRAVIS_BUILD_DIR}/source/scripts/git-node-encode-module.sh
        # - cd ${TRAVIS_BUILD_DIR}/../m1-sdk-release/examples/mach1spatial-nodejs/mach1spatial-transcode && ${TRAVIS_BUILD_DIR}/source/scripts/git-node-transcode-module.sh
        - cd ${TRAVIS_BUILD_DIR}/../m1-sdk-release && ${TRAVIS_BUILD_DIR}/source/scripts/deploy.sh
        # removing master branch after pushed into release repo is completed for a future deploy without merge conflicts
        - cd ${TRAVIS_BUILD_DIR} && $ git push origin --delete master