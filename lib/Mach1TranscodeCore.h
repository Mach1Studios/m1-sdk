//  Mach1 Spatial SDK
//  Copyright Â© 2017-2020 Mach1. All rights reserved.

#pragma once

#ifndef Mach1TranscodeCore_h
#define Mach1TranscodeCore_h

#include <math.h>
#include <stddef.h>
#include <vector>
#include <map>
#include "M1DSP/M1DSPFilters.h"
#include "M1DSP/M1DSPUtilities.h"
#include "Mach1Point3DCore.h"

class SpatialSoundMatrix {
	std::vector<std::vector<float>> data;

public:
	SpatialSoundMatrix(std::vector<std::vector<float>> data)
	{
		this->data = data;
	}

	std::vector<std::vector<float>>& getData()
	{
		return data;
	}
};

namespace Mach1TranscodeConstantsInternal {
	const float r2 = (float)sqrt(2.0);
	//const float r3 = (float)sqrt(3.0);
	const float oor2 = (float)(1.0 / sqrt(2.0));
	//const float oor3 = (float)(1.0 / sqrt(3.0));
	const float oor4 = (float)(1.0 / sqrt(4.0));
	const float oor8 = (float)(1.0 / sqrt(8.0));
	const float oor16 = (float)(1.0 / sqrt(16.0));
	//const float oo2r2 = (float)(1.0 / (2.0 * sqrt(2.0)));
	//const float r3or2 = (float)(sqrt(3.0) / sqrt(2.0));
	const float r3o2 = (float)sqrt(3.0) / 2.0f;
	const float r2o2 = (float)sqrt(2.0) / 2.0f;
	const float r2o3 = (float)sqrt(2.0) / 3.0f;
	const float r2o4 = (float)sqrt(2.0) / 4.0f;
	//const float r2o6 = (float)sqrt(2.0) / 6.0f;
	const float r2o8 = (float)sqrt(2.0) / 8.0f;
	//const float r2o12 = (float)sqrt(2.0) / 12.0f;
	const float r2o20 = (float)sqrt(2.0) / 20.0f;
	//const float oo8 = (float)1.0f / 8.0f;


	const SpatialSoundMatrix FuMa2ACNSN3D(std::vector<std::vector<float>>
	{   { r2, 0, 0, 0 },  //W
		{ 0, 0, 1, 0 },   //Y
		{ 0, 0, 0, 1 },   //Z
		{ 0, 1, 0, 0 } }); //X
	const SpatialSoundMatrix FuMaO2A2ACNSN3DO2A(std::vector<std::vector<float>>
	{   { r2, 0, 0, 0, 0, 0, 0, 0, 0 },    //W
		{ 0, 0, 1, 0, 0, 0, 0, 0, 0 },     //X
		{ 0, 0, 0, 1, 0, 0, 0, 0, 0 },     //Y
		{ 0, 1, 0, 0, 0, 0, 0, 0, 0 },     //Z
		{ 0, 0, 0, 0, 0, 0, 0, 0, r3o2 },  //
		{ 0, 0, 0, 0, 0, 0, r3o2, 0, 0 },  //
		{ 0, 0, 0, 0, 1, 0, 0, 0, 0 },     //
		{ 0, 0, 0, 0, 0, r3o2, 0, 0, 0 },  //
		{ 0, 0, 0, 0, 0, 0, 0, r3o2, 0 } });//
	const SpatialSoundMatrix FuMaO3A2ACNSN3DO3A(std::vector<std::vector<float>>
	{   { r2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },            //W
		{ 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },             //X
		{ 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },             //Y
		{ 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },             //Z
		{ 0, 0, 0, 0, 0, 0, 0, 0, r3o2, 0, 0, 0, 0, 0, 0, 0 },          //
		{ 0, 0, 0, 0, 0, 0, r3o2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },          //
		{ 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },             //
		{ 0, 0, 0, 0, 0, r3o2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },          //
		{ 0, 0, 0, 0, 0, 0, 0, r3o2, 0, 0, 0, 0, 0, 0, 0, 0 },          //
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.790569f },     //
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.745356f, 0, 0 },     //
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.843274f, 0, 0, 0, 0 },     //
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },             //
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.843274f, 0, 0, 0, 0, 0 },     //
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.745356f, 0, 0, 0 },     //
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.790569f, 0 } });   //
	// -- ACN/SN3D ---
	const SpatialSoundMatrix ACNSN3D2FuMa(std::vector<std::vector<float>>
	{   { oor2, 0, 0, 0 }, //W
		{ 0, 0, 0, 1 },    //X
		{ 0, 1, 0, 0 },    //Y
		{ 0, 0, 1, 0 } });  //Z
	const SpatialSoundMatrix ACNSN3DO2A2FuMaO2A(std::vector<std::vector<float>>
	{   { oor2, 0, 0, 0, 0, 0, 0, 0, 0 },  //W Fuma Output
		{ 0, 0, 0, 1, 0, 0, 0, 0, 0 },     //X
		{ 0, 1, 0, 0, 0, 0, 0, 0, 0 },     //Y
		{ 0, 0, 1, 0, 0, 0, 0, 0, 0 },     //Z
		{ 0, 0, 0, 0, 0, 0, 1, 0, 0 },     //
		{ 0, 0, 0, 0, 0, 0, 0, 1.154701f, 0 },     //
		{ 0, 0, 0, 0, 0, 1.154701f, 0, 0, 0 },     //
		{ 0, 0, 0, 0, 0, 0, 0, 0, 1.154701f },     //
		{ 0, 0, 0, 0, 1.154701f, 0, 0, 0, 0 } });   //
	const SpatialSoundMatrix ACNSN3DO3A2FuMaO3A(std::vector<std::vector<float>>
	{   { oor2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },  //W Fuma Output
		{ 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },     //X
		{ 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },     //Y
		{ 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },     //Z
		{ 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },     //
		{ 0, 0, 0, 0, 0, 0, 0, 1.154701f, 0, 0, 0, 0, 0, 0, 0, 0 },     //
		{ 0, 0, 0, 0, 0, 1.154701f, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },     //
		{ 0, 0, 0, 0, 0, 0, 0, 0, 1.154701f, 0, 0, 0, 0, 0, 0, 0 },     //
		{ 0, 0, 0, 0, 1.154701f, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },     //
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },             //
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.185854f, 0, 0 },     //
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.185854f, 0, 0, 0, 0 },     //
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.341641f, 0 },     //
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.341641f, 0, 0, 0, 0, 0 },     //
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.264911f },     //
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.264911f, 0, 0, 0, 0, 0, 0 } });   //

	// --- From M1Horizon ---
	const SpatialSoundMatrix M1Horizon2FuMa(std::vector<std::vector<float>>
	{   { oor2, oor2, oor2, oor2 },
		{ oor2, -oor2, oor2, -oor2 },
		{ oor2, oor2, -oor2, -oor2 },
		{ 0, 0, 0, 0 } });
	const SpatialSoundMatrix M1Horizon2ACNSN3D(std::vector<std::vector<float>>
	{   { 1, 1, 1, 1 },
		{ oor2, -oor2, -oor2, oor2 },
		{ 0, 0, 0, 0 },
		{ oor2, oor2, -oor2, -oor2 } });
	const SpatialSoundMatrix M1Horizon2ACNSN3DO2A(std::vector<std::vector<float>>
	{   {  1.0000f, 1.0000f, 1.0000f, 1.0000f},
		{ 0.7071f,  0.7071f, -0.7071f, -0.7071f },
		{ 0.0000f,  0.0000f,  0.0000f,  0.0000f },
		{ 0.7071f, -0.7071f, -0.7071f,  0.7071f },
		{ 0.8660f, -0.8660f,  0.8660f, -0.8660f },
		{ 0.0000f,  0.0000f,  -0.0000f,  -0.0000f },
		{ -0.5000f, -0.5000f, -0.5000f, -0.5000f },
		{ 0.0000f,  -0.0000f,  -0.0000f,  0.0000f },
		{ 0.0000f, -0.0000f,  0.0000f, -0.0000f } });
	const SpatialSoundMatrix M1Horizon2ACNSN3DO3A(std::vector<std::vector<float>>
	{   {  1.0000f, 1.0000f, 1.0000f, 1.0000f},
		{ 0.7071f,  0.7071f, -0.7071f, -0.7071f },
		{ 0.0000f,  0.0000f,  0.0000f,  0.0000f },
		{ 0.7071f, -0.7071f, -0.7071f,  0.7071f },
		{ 0.8660f, -0.8660f,  0.8660f, -0.8660f },
		{ 0.0000f,  0.0000f,  -0.0000f,  -0.0000f },
		{ -0.5000f, -0.5000f, -0.5000f, -0.5000f },
		{ 0.0000f,  -0.0000f,  -0.0000f,  0.0000f },
		{ 0.0000f, -0.0000f,  0.0000f, -0.0000f },
		{ 0.5590f,  0.5590f, -0.5590f, -0.5590f },
		{ 0.0000f,  -0.0000f,  0.0000f,  -0.0000f },
		{ -0.4330f, -0.4330f,  0.4330f,  0.4330f },
		{ -0.0000f,  -0.0000f,  -0.0000f,  -0.0000f },
		{ -0.4330f,  0.4330f,  0.4330f, -0.4330f },
		{ 0.0000f,  -0.0000f,  0.0000f,  -0.0000f },
		{ -0.5590f,  0.5590f,  0.5590f, -0.5590f } });
	const SpatialSoundMatrix ACNSN3D2M1Horizon(std::vector<std::vector<float>>
	{   {  0.5000f, 0.3536f, 0.0000f, 0.3536f},
		{ 0.5000f,  0.3536f,  0.0000f, -0.3536f },
		{ 0.5000f, -0.3536f,  0.0000f, -0.3536f },
		{ 0.5000f, -0.3536f,  0.0000f,  0.3536f } });
	const SpatialSoundMatrix ACNSN3DO2A2M1Horizon(std::vector<std::vector<float>>
	{   {  0.3727f, 0.3953f, 0.0000f, 0.3953f, 0.1614f, 0.0000f, -0.0932f, 0.0000f, 0.0000f},
		{ 0.3727f,  0.3953f,  0.0000f, -0.3953f, -0.1614f,  0.0000f, -0.0932f,  -0.0000f, -0.0000f },
		{ 0.3727f, -0.3953f,  0.0000f, -0.3953f,  0.1614f,  -0.0000f, -0.0932f,  -0.0000f,  0.0000f },
		{ 0.3727f, -0.3953f,  0.0000f,  0.3953f, -0.1614f,  -0.0000f, -0.0932f,  0.0000f, -0.0000f } });
	const SpatialSoundMatrix ACNSN3DO3A2M1Horizon(std::vector<std::vector<float>>
	{   {  0.3123f, 0.3975f, 0.0000f, 0.3975f, 0.2705f, 0.0000f, -0.1562f, 0.0000f, 0.0000f, 0.0349f, 0.0000f, -0.0270f, -0.0000f, -0.0270f, 0.0000f, -0.0349f},
		{ 0.3123f,  0.3975f,  0.0000f, -0.3975f, -0.2705f,  0.0000f, -0.1562f,  -0.0000f, -0.0000f,  0.0349f,  -0.0000f, -0.0270f,  -0.0000f,  0.0270f,  -0.0000f,  0.0349f },
		{ 0.3123f, -0.3975f,  0.0000f, -0.3975f,  0.2705f,  -0.0000f, -0.1562f,  -0.0000f,  0.0000f, -0.0349f,  0.0000f,  0.0270f,  -0.0000f,  0.0270f,  0.0000f,  0.0349f },
		{ 0.3123f, -0.3975f,  0.0000f,  0.3975f, -0.2705f,  -0.0000f, -0.1562f,  0.0000f, -0.0000f, -0.0349f,  -0.0000f,  0.0270f,  -0.0000f, -0.0270f,  -0.0000f, -0.0349f } });
	const SpatialSoundMatrix M1Horizon2M1HorizonPairs(std::vector<std::vector<float>>
	{   { 1, 0, 0, 0 },
		{ 0, 1, 0, 0 },
		{ 0, 1, 0, 0 },
		{ 0, 0, 0, 1 },
		{ 0, 0, 0, 1 },
		{ 0, 0, 1, 0 },
		{ 0, 0, 1, 0 },
		{ 1, 0, 0, 0 } });
	const SpatialSoundMatrix M1Horizon2M1Spatial(std::vector<std::vector<float>>
	{   { oor2, 0, 0, 0 },
		{ 0, oor2, 0, 0 },
		{ 0, 0, oor2, 0 },
		{ 0, 0, 0, oor2 },
		{ oor2, 0, 0, 0 },
		{ 0, oor2, 0, 0 },
		{ 0, 0, oor2, 0 },
		{ 0, 0, 0, oor2 } });
	const SpatialSoundMatrix M1Horizon2M1SpatialPairs(std::vector<std::vector<float>>
	{   { 0.5f, 0, 0, 0 },
		{ 0, 0.5f, 0, 0 },
		{ 0, 0, 0.5f, 0 },
		{ 0.5f, 0, 0, 0 },
		{ 0, 0, 0, 0.5f },
		{ 0, 0, 0.5f, 0 },
		{ 0, 0.5f, 0, 0 },
		{ 0, 0, 0, 0.5f },
		{ 0.5f, 0, 0, 0 },
		{ 0, 0.5f, 0, 0 },
		{ 0, 0, 0.5f, 0 },
		{ 0.5f, 0, 0, 0 },
		{ 0, 0, 0, 0.5f },
		{ 0, 0, 0.5f, 0 },
		{ 0, 0.5f, 0, 0 },
		{ 0, 0, 0, 0.5f } });
	const SpatialSoundMatrix M1Horizon2FiveOh(std::vector<std::vector<float>>
	{   { 1, 0, 0, 0 },
		{ r2o4, r2o4, r2o4, r2o4 },
		{ 0, 1, 0, 0 },
		{ 0, 0, 1, 0 },
		{ 0, 0, 0, 1 } });
	const SpatialSoundMatrix M1Horizon2FiveOneFilm(std::vector<std::vector<float>>
	{   { 1, 0, 0, 0 },
		{ r2o4, r2o4, r2o4, r2o4 },
		{ 0, 1, 0, 0 },
		{ 0, 0, 1, 0 },
		{ 0, 0, 0, 1 },
		{ r2o8, r2o8, r2o8, r2o8 } });
	const SpatialSoundMatrix M1Horizon2FiveOneFilm_Cinema(std::vector<std::vector<float>>
	{   { 1, 0, 0, 0 },
		{ r2o2, r2o2, 0, 0 },
		{ 0, 1, 0, 0 },
		{ 0, 0, 1, 0 },
		{ 0, 0, 0, 1 },
		{ r2o8, r2o8, r2o8, r2o8 } });
	const SpatialSoundMatrix M1Horizon2FiveOneSmpte(std::vector<std::vector<float>>
	{   { 1, 0, 0, 0 },
		{ 0, 1, 0, 0 },
		{ r2o2, r2o2, 0, 0 },
		{ r2o8, r2o8, r2o8, r2o8 },
		{ 0, 0, 1, 0 },
		{ 0, 0, 0, 1 } });
	const SpatialSoundMatrix M1Horizon2FiveOneDts(std::vector<std::vector<float>>
	{   { 1, 0, 0, 0 },
		{ 0, 1, 0, 0 },
		{ 0, 0, 1, 0 },
		{ 0, 0, 0, 1 },
		{ r2o2, r2o2, 0, 0 },
		{ r2o8, r2o8, r2o8, r2o8 } });
	const SpatialSoundMatrix M1Horizon2SixOh(std::vector<std::vector<float>>
	{   { 0, 0, 0, 0 },
		{ 0, 0, 0, 0 },
		{ 0, 0, 0, 0 },
		{ 0, 0, 0, 0 },
		{ 0, 0, 0, 0 },
		{ 0, 0, 0, 0 } });

	// --- Surround To M1Horizon ---
	const SpatialSoundMatrix FiveOh2M1Horizon(std::vector<std::vector<float>>
		//L, C, R, Ls, Rs
	{   { 1, r2o4, 0, 0, 0 },
		{ 0, r2o4, 1, 0, 0 },
		{ 0, r2o4, 0, 1, 0 },
		{ 0, r2o4, 0, 0, 1 } });
	const SpatialSoundMatrix FiveOneFilm2M1Horizon(std::vector<std::vector<float>>
		//L, C, R, Ls, Rs, LFE
	{   { 1, r2o4, 0, 0, 0, r2o8 },
		{ 0, r2o4, 1, 0, 0, r2o8 },
		{ 0, r2o4, 0, 1, 0, r2o8 },
		{ 0, r2o4, 0, 0, 1, r2o8 } });
	const SpatialSoundMatrix FiveOneFilm_Cinema2M1Horizon(std::vector<std::vector<float>>
	{   { 1, r2o4, 0, 0, 0, r2o8 },
		{ 0, r2o4, 1, 0, 0, r2o8 },
		{ 0, r2o20, 0, 1, 0, r2o8 },
		{ 0, r2o20, 0, 0, 1, r2o8 } });
	const SpatialSoundMatrix FiveOneSmpte2M1Horizon(std::vector<std::vector<float>>
	{   { 1, 0, r2o4, r2o8, 0, 0 },
		{ 0, 1, r2o4, r2o8, 0, 0 },
		{ 0, 0, r2o4, r2o8, 1, 0 },
		{ 0, 0, r2o4, r2o8, 0, 1 } });
	const SpatialSoundMatrix FiveOneDts2M1Horizon(std::vector<std::vector<float>>
	{   { 1, 0, 0, 0, r2o4, r2o8 },
		{ 0, 1, 0, 0, r2o4, r2o8 },
		{ 0, 0, 1, 0, r2o4, r2o8 },
		{ 0, 0, 0, 1, r2o4, r2o8 } });
	const SpatialSoundMatrix SixOh2M1Horizon(std::vector<std::vector<float>> // ?
	{   { 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0 } });

	// --- M1Horizon ( std::vector<std::vector<float>>M1Horizon) + Stereo ( std::vector<std::vector<float>>S) ---
	const SpatialSoundMatrix M1HorizonS2FuMa(std::vector<std::vector<float>>
	{   { oor2, oor2, oor2, oor2, oor2, oor2 },
		{ oor2, -oor2, oor2, -oor2, 0, 0 },
		{ oor2, oor2, -oor2, -oor2, 0, 0 },
		{ 0, 0, 0, 0, 0, 0 } });
	const SpatialSoundMatrix M1HorizonS2ACNSN3D(std::vector<std::vector<float>>
	{   { 1, 1, 1, 1, 1, 1 },
		{ oor2, -oor2, -oor2, oor2, 0, 0 },
		{ 0, 0, 0, 0, 0, 0 },
		{ oor2, oor2, -oor2, -oor2, 0, 0 } });
	const SpatialSoundMatrix M1HorizonS2M1Horizon(std::vector<std::vector<float>>
	{   { 1, 0, 0, 0, 0.25f, 0.25f },
		{ 0, 1, 0, 0, 0.25f, 0.25f },
		{ 0, 0, 1, 0, 0.25f, 0.25f },
		{ 1, 0, 0, 0, 0.25f, 0.25f } });
	const SpatialSoundMatrix M1HorizonS2M1HorizonPairs(std::vector<std::vector<float>>
	{   { 1, 0, 0, 0, 1, 0 },
		{ 0, 1, 0, 0, 0, 1 },
		{ 0, 1, 0, 0, 1, 0 },
		{ 0, 0, 0, 1, 0, 1 },
		{ 0, 0, 0, 1, 1, 0 },
		{ 0, 0, 1, 0, 0, 1 },
		{ 0, 0, 1, 0, 1, 0 },
		{ 1, 0, 0, 0, 0, 1 } });
	const SpatialSoundMatrix M1HorizonS2M1Spatial(std::vector<std::vector<float>>
	{   { 0.5f, 0, 0, 0, 0.125f, 0.125f },
		{ 0, 0.5f, 0, 0, 0.125f, 0.125f },
		{ 0, 0, 0.5f, 0, 0.125f, 0.125f },
		{ 0, 0, 0, 0.5f, 0.125f, 0.125f },
		{ 0.5f, 0, 0, 0, 0.125f, 0.125f },
		{ 0, 0.5f, 0, 0, 0.125f, 0.125f },
		{ 0, 0, 0.5f, 0, 0.125f, 0.125f },
		{ 0, 0, 0, 0.5f, 0.125f, 0.125f } });
	const SpatialSoundMatrix M1HorizonS2M1SpatialPairs(std::vector<std::vector<float>>
	{   { 0.5f, 0, 0, 0, 1, 0 },
		{ 0, 0.5f, 0, 0, 0, 1 },
		{ 0, 0, 0.5f, 0, 1, 0 },
		{ 0.5f, 0, 0, 0, 0, 1 },
		{ 0, 0, 0, 0.5f, 1, 0 },
		{ 0, 0, 0.5f, 0, 0, 1 },
		{ 0, 0.5f, 0, 0, 1, 0 },
		{ 0, 0, 0, 0.5f, 0, 1 },
		{ 0.5f, 0, 0, 0, 1, 0 },
		{ 0, 0.5f, 0, 0, 0, 1 },
		{ 0, 0, 0.5f, 0, 1, 0 },
		{ 0.5f, 0, 0, 0, 0, 1 },
		{ 0, 0, 0, 0.5f, 1, 0 },
		{ 0, 0, 0.5f, 0, 0, 1 },
		{ 0, 0.5f, 0, 0, 1, 0 },
		{ 0, 0, 0, 0.5f, 0, 1 } });
	//const SpatialSoundStandart M1HorizonPairs2FuMa( std::vector<std::vector<float>>
	//{   { oo2r2, oo2r2, oo2r2, oo2r2, oo2r2, oo2r2, oo2r2, oo2r2 },
	//  { oo2r2, oo2r2, oo2r2, -oo2r2,- oo2r2, oo2r2, -oo2r2, -oo2r2 },
	//  { oo2r2, -oo2r2, -oo2r2, oo2r2, -oo2r2, -oo2r2, oo2r2, -oo2r2 },
	//  { 0, 0, 0, 0 } });

	// --- M1Spatial ( std::vector<std::vector<float>>M1Spatial) ---
	const SpatialSoundMatrix M1Spatial2M1Spatial(std::vector<std::vector<float>> // requested for conversions of number of files
	{   { 1, 0, 0, 0, 0, 0, 0, 0},
		{ 0, 1, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 1, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 1, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 1, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 1, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 1, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 1 } });
	const SpatialSoundMatrix M1Spatial2FuMa(std::vector<std::vector<float>>
	{   { oor2, oor2, oor2, oor2, oor2, oor2, oor2, oor2 },
		{ 0.5f, 0.5f, -0.5f, -0.5f, 0.5f, 0.5f, -0.5f, -0.5f },
		{ 0.5f, -0.5f, 0.5f, -0.5f, 0.5f, -0.5f, 0.5f, -0.5f },
		{ oor2, oor2, oor2, oor2, -oor2, -oor2, -oor2, -oor2 } });
	const SpatialSoundMatrix M1Spatial2FuMaO2A(std::vector<std::vector<float>>
	{   { oor2, oor2, oor2, oor2, oor2, oor2, oor2, oor2 }, //W
		{ 0.5f, 0.5f, -0.5f, -0.5f, 0.5f, 0.5f, -0.5f, -0.5f }, //X
		{ 0.5f, -0.5f, 0.5f, -0.5f, 0.5f, -0.5f, 0.5f, -0.5f }, //Y
		{ oor2, oor2, oor2, oor2, -oor2, -oor2, -oor2, -oor2 }, //Z
		{ 0, 0, 0, 0, 0, 0, 0, 0 }, //R
		{ 0, 0, 0, 0, 0, 0, 0, 0 }, //S
		{ 0, 0, 0, 0, 0, 0, 0, 0 }, //T
		{ 0, 0, 0, 0, 0, 0, 0, 0 }, //U
		{ 0, 0, 0, 0, 0, 0, 0, 0 } }); //V
	const SpatialSoundMatrix M1Spatial2TBE(std::vector<std::vector<float>>
	{   { 0.488603f, 0.488603f, 0.488603f, 0.488603f, 0.488603f, 0.488603f, 0.488603f, 0.488603f },
		{ -0.281971f, 0.281971f, -0.281971f, 0.281971f, -0.281971f, 0.281971f, -0.281971f, 0.281971f },
		{ 0.281971f, 0.281971f, -0.281971f, -0.281971f, 0.281971f, 0.281971f, -0.281971f, -0.281971f },
		{ 0.282343f, 0.282343f, 0.282343f, 0.282343f, -0.282343f, -0.282343f, -0.282343f, -0.282343f },
		{ 4.339019f, -1.590494f, 5.0602722f, 2.414620f, 4.339019f, -1.590494f, 5.0602722f, 2.414620f },
		{ -0.363863f, 0.363863f, 0.363863f, -0.363863f, -0.363863f, 0.363863f, 0.363863f, -0.363863f },
		{ -0.364343f, 0.364343f, -0.364343f, 0.364343f, 0.364343f, -0.364343f, 0.364343f, -0.364343f },
		{ 0.364343f, 0.364343f, -0.364343f, -0.364342f, -0.364343f, -0.364343f, 0.364343f, 0.364343f } });
	//oFOA
	//    const SpatialSoundStandart M1Spatial2ACNSN3D( std::vector<std::vector<float>>
	//    {   { oor3, oor3, oor3, oor3, oor3, oor3, oor3, oor3 }, //oor3 = 0.5773f
	//        { r3o2, -r3o2, r3o2, -r3o2, r3o2, -r3o2, r3o2, -r3o2 }, // r3o2 = 0.8660f
	//        { r3or2, r3or2, r3or2, r3or2, -r3or2, -r3or2, -r3or2, -r3or2 }, // r3or2 = 1.2247f
	//        { r3o2, r3o2, -r3o2, -r3o2, r3o2, r3o2, -r3o2, -r3o2 } });
	//nFOA
	const SpatialSoundMatrix M1Spatial2ACNSN3D(std::vector<std::vector<float>>
	{   {  1.0000f, 1.0000f, 1.0000f, 1.0000f, 1.0000f, 1.0000f, 1.0000f, 1.0000f},
		{ 0.5000f, -0.5000f,  0.5000f, -0.5000f,  0.5000f, -0.5000f, -0.5000f,  0.5000f },
		{ 0.7071f,  0.7071f,  0.7071f,  0.7071f, -0.7071f, -0.7071f, -0.7071f, -0.7071f },
		{ 0.5000f,  0.5000f, -0.5000f, -0.5000f,  0.5000f,  0.5000f, -0.5000f, -0.5000f } });
	//oSOA
	//    const SpatialSoundStandart M1Spatial2ACNSN3DO2A( std::vector<std::vector<float>>
	//    {   { oor3, oor3, oor3, oor3, oor3, oor3, oor3, oor3 },
	//        { r3o2, -r3o2, r3o2, -r3o2, r3o2, -r3o2, r3o2, -r3o2 },
	//        { r3or2, r3or2, r3or2, r3or2, -r3or2, -r3or2, -r3or2, -r3or2 },
	//        { r3o2, r3o2, -r3o2, -r3o2, r3o2, r3o2, -r3o2, -r3o2 },
	//        {  0.4330f, -0.4330f,  0.4330f, -0.4330f,  0.4330f, -0.4330f,  0.4330f, -0.4330f},
	//        {  0.6124f,  0.6124f, -0.6124f, -0.6124f, -0.6124f, -0.6124f,  0.6124f,  0.6124f},
	//        {  0.2500f,  0.2500f,  0.2500f,  0.2500f,  0.2500f,  0.2500f,  0.2500f,  0.2500f},
	//        {  0.6124f, -0.6124f, -0.6124f,  0.6124f, -0.6124f,  0.6124f,  0.6124f, -0.6124f},
	//        {  0.0000f, -0.0000f,  0.0000f, -0.0000f,  0.0000f, -0.0000f,  0.0000f, -0.0000f} });
	//nSOA
	const SpatialSoundMatrix M1Spatial2ACNSN3DO2A(std::vector<std::vector<float>>
	{   {  1.0000f, 1.0000f, 1.0000f, 1.0000f, 1.0000f, 1.0000f, 1.0000f, 1.0000f},
		{ 0.5000f, -0.5000f,  0.5000f, -0.5000f,  0.5000f, -0.5000f, -0.5000f,  0.5000f },
		{ 0.7071f,  0.7071f,  0.7071f,  0.7071f, -0.7071f, -0.7071f, -0.7071f, -0.7071f },
		{ 0.5000f,  0.5000f, -0.5000f, -0.5000f,  0.5000f,  0.5000f, -0.5000f, -0.5000f },
		{ 0.4330f, -0.4330f,  0.4330f, -0.4330f,  0.4330f, -0.4330f,  0.4330f, -0.4330f },
		{ 0.6124f,  0.6124f, -0.6124f, -0.6124f, -0.6124f, -0.6124f,  0.6124f,  0.6124f },
		{ 0.2500f,  0.2500f,  0.2500f,  0.2500f,  0.2500f,  0.2500f,  0.2500f,  0.2500f },
		{ 0.6124f, -0.6124f, -0.6124f,  0.6124f, -0.6124f,  0.6124f,  0.6124f, -0.6124f },
		{ 0.0000f,  0.0000f,  0.0000f,  0.0000f,  0.0000f,  0.0000f,  0.0000f,  0.0000f } });
	const SpatialSoundMatrix M1Spatial2ACNSN3DO3A(std::vector<std::vector<float>>
	{   {  1.0000f, 1.0000f, 1.0000f, 1.0000f, 1.0000f, 1.0000f, 1.0000f, 1.0000f},
		{ 0.5000f, -0.5000f,  0.5000f, -0.5000f,  0.5000f, -0.5000f,  0.5000f, -0.5000f },
		{ 0.7071f,  0.7071f,  0.7071f,  0.7071f, -0.7071f, -0.7071f, -0.7071f, -0.7071f },
		{ 0.5000f,  0.5000f, -0.5000f, -0.5000f,  0.5000f,  0.5000f, -0.5000f, -0.5000f },
		{ 0.4330f, -0.4330f,  0.4330f, -0.4330f,  0.4330f, -0.4330f,  0.4330f, -0.4330f },
		{ 0.6124f,  0.6124f, -0.6124f, -0.6124f, -0.6124f, -0.6124f,  0.6124f,  0.6124f },
		{ 0.2500f,  0.2500f,  0.2500f,  0.2500f,  0.2500f,  0.2500f,  0.2500f,  0.2500f },
		{ 0.6124f, -0.6124f, -0.6124f,  0.6124f, -0.6124f,  0.6124f,  0.6124f, -0.6124f },
		{ 0.0000f,  0.0000f,  0.0000f,  0.0000f,  0.0000f,  0.0000f,  0.0000f,  0.0000f },
		{ 0.1976f,  0.1976f, -0.1976f, -0.1976f,  0.1976f,  0.1976f, -0.1976f, -0.1976f },
		{ 0.6847f, -0.6847f,  0.6847f, -0.6847f, -0.6847f,  0.6847f, -0.6847f,  0.6847f },
		{ 0.4593f,  0.4593f, -0.4593f, -0.4593f,  0.4593f,  0.4593f, -0.4593f, -0.4593f },
		{ -0.1768f, -0.1768f, -0.1768f, -0.1768f,  0.1768f,  0.1768f,  0.1768f,  0.1768f },
		{ 0.4593f, -0.4593f, -0.4593f,  0.4593f,  0.4593f, -0.4593f, -0.4593f,  0.4593f },
		{ 0.0000f,  0.0000f,  0.0000f,  0.0000f,  0.0000f,  0.0000f,  0.0000f,  0.0000f },
		{ -0.1976f,  0.1976f,  0.1976f, -0.1976f, -0.1976f,  0.1976f,  0.1976f, -0.1976f } });
	const SpatialSoundMatrix ACNSN3D2M1Spatial(std::vector<std::vector<float>>
	{   {  0.5000f, 0.2500f, 0.3536f, 0.2500f},
		{ 0.5000f,  0.2500f,  0.3536f, -0.2500f },
		{ 0.5000f, -0.2500f,  0.3536f, -0.2500f },
		{ 0.5000f, -0.2500f,  0.3536f,  0.2500f },
		{ 0.5000f,  0.2500f, -0.3536f,  0.2500f },
		{ 0.5000f,  0.2500f, -0.3536f, -0.2500f },
		{ 0.5000f, -0.2500f, -0.3536f, -0.2500f },
		{ 0.5000f, -0.2500f, -0.3536f,  0.2500f } });
	const SpatialSoundMatrix ACNSN3DO2A2M1Spatial(std::vector<std::vector<float>>
	{   {  0.3727f, 0.2795f, 0.3953f, 0.2795f, 0.0807f, 0.1141f, 0.0466f, 0.1141f, 0.0000f},
		{ 0.3727f,  0.2795f,  0.3953f, -0.2795f, -0.0807f,  0.1141f,  0.0466f, -0.1141f, -0.0000f },
		{ 0.3727f, -0.2795f,  0.3953f, -0.2795f,  0.0807f, -0.1141f,  0.0466f, -0.1141f,  0.0000f },
		{ 0.3727f, -0.2795f,  0.3953f,  0.2795f, -0.0807f, -0.1141f,  0.0466f,  0.1141f, -0.0000f },
		{ 0.3727f,  0.2795f, -0.3953f,  0.2795f,  0.0807f, -0.1141f,  0.0466f, -0.1141f,  0.0000f },
		{ 0.3727f,  0.2795f, -0.3953f, -0.2795f, -0.0807f, -0.1141f,  0.0466f,  0.1141f, -0.0000f },
		{ 0.3727f, -0.2795f, -0.3953f, -0.2795f,  0.0807f,  0.1141f,  0.0466f,  0.1141f,  0.0000f },
		{ 0.3727f, -0.2795f, -0.3953f,  0.2795f, -0.0807f,  0.1141f,  0.0466f, -0.1141f, -0.0000f } });
	const SpatialSoundMatrix ACNSN3DO3A2M1Spatial(std::vector<std::vector<float>>
	{   {  0.3123f, 0.2811f, 0.3975f, 0.2811f, 0.1352f, 0.1913f, 0.0781f, 0.1913f, 0.0000f, 0.0123f, 0.0428f, 0.0287f, -0.0110f, 0.0287f, 0.0000f, -0.0123f},
		{ 0.3123f,  0.2811f,  0.3975f, -0.2811f, -0.1352f,  0.1913f,  0.0781f, -0.1913f, -0.0000f,  0.0123f, -0.0428f,  0.0287f, -0.0110f, -0.0287f, -0.0000f,  0.0123f },
		{ 0.3123f, -0.2811f,  0.3975f, -0.2811f,  0.1352f, -0.1913f,  0.0781f, -0.1913f,  0.0000f, -0.0123f,  0.0428f, -0.0287f, -0.0110f, -0.0287f,  0.0000f,  0.0123f },
		{ 0.3123f, -0.2811f,  0.3975f,  0.2811f, -0.1352f, -0.1913f,  0.0781f,  0.1913f, -0.0000f, -0.0123f, -0.0428f, -0.0287f, -0.0110f,  0.0287f, -0.0000f, -0.0123f },
		{ 0.3123f,  0.2811f, -0.3975f,  0.2811f,  0.1352f, -0.1913f,  0.0781f, -0.1913f,  0.0000f,  0.0123f, -0.0428f,  0.0287f,  0.0110f,  0.0287f, -0.0000f, -0.0123f },
		{ 0.3123f,  0.2811f, -0.3975f, -0.2811f, -0.1352f, -0.1913f,  0.0781f,  0.1913f, -0.0000f,  0.0123f,  0.0428f,  0.0287f,  0.0110f, -0.0287f,  0.0000f,  0.0123f },
		{ 0.3123f, -0.2811f, -0.3975f, -0.2811f,  0.1352f,  0.1913f,  0.0781f,  0.1913f,  0.0000f, -0.0123f, -0.0428f, -0.0287f,  0.0110f, -0.0287f, -0.0000f,  0.0123f },
		{ 0.3123f, -0.2811f, -0.3975f,  0.2811f, -0.1352f,  0.1913f,  0.0781f, -0.1913f, -0.0000f, -0.0123f,  0.0428f, -0.0287f,  0.0110f,  0.0287f,  0.0000f, -0.0123f } });
	const SpatialSoundMatrix TBE2M1Spatial(std::vector<std::vector<float>>
	{   { 0.682217f, -0.590557f, 0.590557f, 0.591337f, 0, -0.152414f, -0.152615f, 0.152615f },
		{ 0.682217f, 0.590557f, 0.590557f, 0.591337f, 0, 0.152414f, 0.152615f, 0.152615f },
		{ 0.682217f, -0.590557f, -0.590557f, 0.591337f, 0, 0.152414f, -0.152615f, -0.152615f },
		{ 0.682217f, 0.590557f, -0.590557f, 0.591337f, 0, -0.152414f, 0.152615f, -0.152615f },
		{ 0.682217f, -0.590557f, 0.590557f, -0.591337f, 0, -0.152414f, 0.152615f, -0.152615f },
		{ 0.682217f, 0.590557f, 0.590557f, -0.591337f, 0, 0.152414f, -0.152615f, -0.152615f },
		{ 0.682217f, -0.590557f, -0.590557f, -0.591337f, 0, 0.152414f, 0.152615f, 0.152615f },
		{ 0.682217f, 0.590557f, -0.590557f, -0.591337f, 0, -0.152414f, -0.152615f, 0.152615f } });
	//inverse
	//    {   { 1.465809f, -1.693316f, 1.693316f, 1.691083f, 0, -6.561077f, -6.552435f, 6.552435f },
	//        { 1.465809f, 1.693316f, 1.693316f, 1.691083f, 0, 6.561077f, 6.552435f, 6.552435f },
	//        { 1.465809f, -1.693316f, -1.693316f, 1.691083f, 0, 6.561077f, -6.552435f, -6.552435f },
	//        { 1.465809f, 1.693316f, -1.693316f, 1.691083f, 0, -6.561077f, 6.552435f, -6.552435f },
	//        { 1.465809f, -1.693316f, 1.693316f, -1.691083f, 0, -6.561077f, 6.552435f, -6.552435f },
	//        { 1.465809f, 1.693316f, 1.693316f, -1.691083f, 0, 6.561077f, -6.552435f, -6.552435f },
	//        { 1.465809f, -1.693316f, -1.693316f, -1.691083f, 0, 6.561077f, 6.552435f, 6.552435f },
	//        { 1.465809f, 1.693316f, -1.693316f, -1.691083f, 0, -6.561077f, -6.552435f, 6.552435f } });
    const SpatialSoundMatrix ACNSN3DmaxRE1oa2M1Spatial(std::vector<std::vector<float>>
    {   { 0.1195696368813515, 0.1008485481142998, 0.1008353978395462, 0.1008441597223282 },
        { 0.2335921078920364, -0.09768784791231155, 0.1874370872974396, 0.1874081641435623 },
        { 0.2335949540138245, 0.1874101459980011, 0.1874414682388306, -0.09768243134021759 },
        { 0.2335852235555649, -0.1874117404222488, 0.09766875952482224, -0.1874225586652756 },
        { 0.2335794866085052, 0.1874110400676727, -0.09767947345972061, 0.187408521771431 },
        { 0.2336007952690125, -0.1874084323644638, -0.187450110912323, 0.09767483919858932 },
        { 0.2335984259843826, 0.09767667949199677, -0.1874499171972275, -0.1874141097068787 },
        { 0.1195692494511604, -0.1008481085300446, -0.1008350774645805, -0.1008405983448029 } });
    const SpatialSoundMatrix ACNSN3DmaxRE2oa2M1Spatial(std::vector<std::vector<float>>
    {  { 0.1090826615691185, 0.0920034795999527, 0.09199140965938568, 0.09199952334165573, 0.08290118724107742, 0.08289731293916702, -0.00001070611233444652, 0.08288697898387909, 3.903339347743895e-6 },
       { 0.2131048589944839, -0.08912000060081482, 0.1709974855184555, 0.1709710955619812, -0.07774148136377335, -0.07773252576589584, 0.04100454598665237, 0.077737957239151, 0.07099374383687973 },
       { 0.2131073176860809, 0.1709731072187424, 0.1710015088319778, -0.0891149714589119, -0.07774622738361359, 0.0777338519692421, 0.04101236909627914, -0.07773105800151825, -0.07100926339626312 },
       { 0.2130984961986542, -0.1709743589162827, 0.08910258859395981, -0.17098468542099, 0.07772756367921829, -0.07773075997829437, -0.08200196921825409, -0.07773472368717194, 2.572631956354599e-6 },
       { 0.2130933254957199, 0.1709740459918976, -0.08911236375570297, 0.1709715723991394, 0.0777197852730751, -0.07773855328559875, -0.08199428021907806, -0.07773697376251221, -1.056926635101263e-6 },
       { 0.2131125181913376, -0.1709719151258469, -0.1710094660520554, 0.08910810947418213, -0.07773729413747787, 0.07773707062005997, 0.04100704938173294, -0.07772628217935562, -0.0710013285279274 },
       { 0.2131107449531555, 0.08910980075597763, -0.1710091829299927, -0.1709767132997513, -0.07773732393980026, -0.07772751897573471, 0.04100724682211876, 0.07774553447961807, 0.07100650668144226 },
       { 0.1090824156999588, -0.09200303256511688, -0.09199123084545135, -0.09199622273445129, 0.08289729803800583, 0.08288894593715668, -7.042106517474167e-6, 0.08288923650979996, -8.28424163046293e-6 } });
    const SpatialSoundMatrix ACNSN3DmaxRE3oa2M1Spatial(std::vector<std::vector<float>>
       {   { 0.1037704199552536, 0.08752302825450897, 0.08751161396503448, 0.08751921355724335, 0.07886399328708649, 0.07886024564504623, -0.00001018568582367152, 0.07885054498910904, 3.712062607519329e-6, 0.03032228536903858, 0.05934694409370422, 0.02347852103412151, -0.03834974765777588, 0.02346921153366566, 1.872788573109574e-7, -0.03031168505549431 },
           { 0.2027266472578049, -0.08477995544672012, 0.1626702845096588, 0.1626451760530472, -0.07395549863576889, -0.07394702732563019, 0.03900770470499992, 0.07395213842391968, 0.06753638386726379, -0.02680866234004498, -0.04886670410633087, -0.02075505442917347, 0.02680177241563797, -0.0179197620600462, -0.001901504583656788, 0.02003007009625435 },
           { 0.202729120850563, 0.1626468896865845, 0.1626740694046021, -0.08477526158094406, -0.07395999133586884, 0.07394827902317047, 0.03901511430740356, -0.07394556701183319, -0.06755108386278152, -0.02003270015120506, -0.04886821284890175, -0.01791944168508053, 0.02680086717009544, -0.02076159417629242, 0.001893583917990327, 0.02681469358503819 },
           { 0.2027206718921661, -0.1626482754945755, 0.08476340025663376, -0.1626576632261276, 0.07394227385520935, -0.07394525408744812, -0.07800837606191635, -0.07394902408123016, 2.455513595123193e-6, 0.02235232293605804, 0.04886993020772934, 0.01492447312921286, -0.03391938284039497, 0.01490964274853468, -3.897445822076406e-6, -0.02235252968966961 },
           { 0.2027156949043274, 0.1626476645469666, -0.08477269113063812, 0.1626454889774323, 0.07393491268157959, -0.07395271211862564, -0.07800125330686569, -0.07395119220018387, -1.009383368000272e-6, -0.0223600622266531, -0.04887482896447182, -0.01491185650229454, 0.03391634672880173, -0.01492041535675526, -2.484820242898422e-6, 0.02235755696892738 },
           { 0.202734187245369, -0.1626453995704651, -0.1626815795898438, 0.08476867526769638, -0.07395152002573013, 0.07395141571760178, 0.03901006653904915, -0.07394117116928101, -0.06754383444786072, 0.02003160305321217, 0.04886731505393982, 0.01792382448911667, -0.02678968198597431, 0.02075854688882828, -0.001904906122945249, -0.026809087023139 },
           { 0.2027321308851242, 0.08477026969194412, -0.1626814156770706, -0.1626503318548203, -0.07395152002573013, -0.07394217699766159, 0.03901023417711258, 0.0739593580365181, 0.0675484910607338, 0.02680993638932705, 0.0488603487610817, 0.02076553925871849, -0.02679237350821495, 0.01792062446475029, 0.001895589288324118, -0.02003329060971737 },
           { 0.1037700846791267, -0.08752264827489853, -0.0875113308429718, -0.08751612156629562, 0.07886018604040146, 0.07885236293077469, -6.698903689539293e-6, 0.07885263860225677, -7.879614713601768e-6, -0.03030674904584885, -0.05934557318687439, -0.02347057498991489, 0.03834228217601776, -0.02347610704600811, 8.135682492138585e-7, 0.03031627088785172 } });
    const SpatialSoundMatrix ACNSN3DmaxRE4oa2M1Spatial(std::vector<std::vector<float>>
   {       { 0.09970320761203766, 0.08409279584884644, 0.08408163487911224, 0.08408891409635544, 0.07577300816774368, 0.07576949894428253, -9.786022928892635e-6, 0.07576004415750504, 3.567830390238669e-6, 0.02913382649421692, 0.05702095106244087, 0.02255832962691784, -0.03684668987989426, 0.0225493535399437, 1.791552648455763e-7, -0.02912365272641182, 2.734581812546821e-6, 0.01137635391205549, 0.01215455215424299, -0.004304197151213884, -0.02557667531073093, -0.004303851164877415, -2.170558445868664e-6, -0.0113661028444767, -0.02162027172744274 },
            { 0.1947810798883438, -0.08145710825920105, 0.1562943458557129, 0.1562703251838684, -0.07105692476034164, -0.07104877382516861, 0.03747889399528503, 0.07105365395545959, 0.0648893341422081, -0.0257579367607832, -0.04695140570402145, -0.01994160935282707, 0.02575126849114895, -0.01721741072833538, -0.001826979801990092, 0.01924501173198223, 0.002624619984999299, -0.003184627974405885, -0.004391957074403763, 0.004018110688775778, 0.02609131671488285, -0.00401957705616951, -0.02202524617314339, -0.01061379257589579, 0.005420136731117964 },
            { 0.1947831213474274, 0.156272292137146, 0.1562981754541397, -0.08145248144865036, -0.07106125354766846, 0.07104998826980591, 0.03748602420091629, -0.07104729861021042, -0.06490352004766464, -0.01924756728112698, -0.04695279151201248, -0.0172171276062727, 0.02575043775141239, -0.01994785293936729, 0.001819366938434541, 0.02576367370784283, -0.00262772710993886, 0.01061519607901573, -0.004397611599415541, -0.00402321619912982, 0.02608190290629864, 0.004018302541226149, 0.02201575599610806, 0.003175792284309864, 0.005414819810539484 },
            { 0.194775253534317, -0.156273365020752, 0.08144118636846542, -0.1562827229499817, 0.07104417681694031, -0.07104699313640594, -0.07495097815990448, -0.07105071097612381, 2.35372931456368e-6, 0.02147623524069786, 0.04695453122258186, 0.01433952804654837, -0.03258999064564705, 0.01432527881115675, -3.744563855434535e-6, -0.02147644571959972, 2.328702748854994e-6, -0.005035347770899534, 0.01134792342782021, -0.0008925147703848779, 0.00147342320997268, -0.0009003495797514915, 3.349572580191307e-6, 0.00504702003672719, 0.03452498093247414 },
            { 0.1947703212499619, 0.1562728732824326, -0.08145013451576233, 0.1562705636024475, 0.07103712856769562, -0.07105418294668198, -0.07494411617517471, -0.07105272263288498, -9.671404086475377e-7, -0.02148369699716568, -0.04695913195610046, -0.01432740315794945, 0.03258699923753738, -0.01433561742305756, -2.387235554124345e-6, 0.02148127742111683, -2.367356046306668e-6, -0.005049013532698154, 0.01135196536779404, -0.0008906612638384104, 0.001480532228015363, -0.0008975002565421164, -3.243078026571311e-6, 0.005039411131292582, 0.03453459590673447 },
            { 0.1947882920503616, -0.1562707722187042, -0.1563054621219635, 0.0814463347196579, -0.07105303555727005, 0.07105295360088348, 0.03748114034533501, -0.07104319334030151, -0.0648963525891304, 0.01924647390842438, 0.04695196449756622, 0.01722133718430996, -0.02573971822857857, 0.01994496583938599, -0.001830245484597981, -0.02575834654271603, -0.002620087470859289, 0.01062561478465796, -0.004400589969009161, -0.004025812260806561, 0.02608503401279449, 0.004016882739961147, 0.02202232368290424, 0.003179017920047045, 0.005412637256085873 },
            { 0.1947865337133408, 0.08144782483577728, -0.1563052982091904, -0.1562753915786743, -0.07105304300785065, -0.07104401290416718, 0.03748122975230217, 0.07106061279773712, 0.06490101665258408, 0.02575916424393654, 0.04694525524973869, 0.01995166391134262, -0.02574232034385204, 0.01721825264394283, 0.001821296638809144, -0.01924812979996204, 0.00262911175377667, -0.003172620432451367, -0.004400142002850771, 0.004015490878373384, 0.02608367428183556, -0.004020859487354755, -0.02202271297574043, -0.01060971431434155, 0.005404055584222078 },
            { 0.09970302879810333, -0.08409221470355988, -0.08408146351575851, -0.08408594131469727, 0.07576944679021835, 0.07576186954975128, -6.43711837255978e-6, 0.07576202601194382, -7.570415164082078e-6, -0.02911888994276524, -0.05701957643032074, -0.0225506629794836, 0.03683948889374733, -0.02255599573254585, 7.81079677381058e-7, 0.02912803366780281, -1.280878791476425e-6, 0.01136820297688246, 0.01216035336256027, -0.004304945468902588, -0.02556860446929932, -0.004303512629121542, 3.248566599722835e-6, -0.01137031894177198, -0.02161155268549919 } });
    const SpatialSoundMatrix ACNSN3DmaxRE5oa2M1Spatial(std::vector<std::vector<float>>
    {        { 0.09913473576307297, 0.08361311256885529, 0.08360214531421661, 0.08360951393842697, 0.07534091174602509, 0.07533739507198334, -9.729755220178049e-6, 0.07532799988985062, 3.547369715306559e-6, 0.02896768972277641, 0.05669571459293365, 0.0224296934902668, -0.03663656488060951, 0.02242074720561504, 1.781506711040493e-7, -0.02895755879580975, 2.71978660748573e-6, 0.01131148915737867, 0.012085254304111, -0.004279652610421181, -0.0254308320581913, -0.004279312677681446, -2.157360086130211e-6, -0.01130127999931574, -0.02149698324501514, -0.008432642556726933, 4.470917701837607e-6, -0.007317919749766588, -1.679591832726146e-6, -0.005340180359780788, -0.01231778785586357, -0.005334007553756237, 2.346880819459329e-6, 0.00732435705140233, 0.001105387462303042, -0.00842803530395031 },
               { 0.1936705112457275, -0.08099259436130524, 0.1554031670093536, 0.1553791761398315, -0.07065175473690033, -0.07064361870288849, 0.03726508840918541, 0.07064855098724365, 0.06451938301324844, -0.02561103738844395, -0.04668372869491577, -0.01982787810266018, 0.02560446597635746, -0.01711923629045486, -0.001816565054468811, 0.01913526095449924, 0.002609663875773549, -0.0031664720736444, -0.004366910085082054, 0.00399519968777895, 0.02594255283474922, -0.003996646497398615, -0.0218996312469244, -0.01055326499044895, 0.005389235448092222, 0.01033944636583328, 0.007246219553053379, 0.01048492733389139, 0.00419218186289072, 0.005845342297106981, 0.00200111954472959, -0.0003239081997890025, 0.001525396248325706, -0.0009843090083450079, -0.0004921129439026117, 0.002360679907724261 },
               { 0.1936727464199066, 0.1553810089826584, 0.1554068177938461, -0.08098802715539932, -0.07065606862306595, 0.07064482569694519, 0.03727219998836517, -0.07064228504896164, -0.06453349441289902, -0.01913778856396675, -0.04668515548110008, -0.01711896248161793, 0.0256036426872015, -0.01983409374952316, 0.001808991655707359, 0.02561678364872932, -0.002612747251987457, 0.01055466569960117, -0.004372532945126295, -0.004000279121100903, 0.02593311853706837, 0.003995392937213182, 0.02189023047685623, 0.00315769063308835, 0.005383942276239395, 0.002360503887757659, -0.007260405458509922, 0.0009765172726474702, 0.004192997701466084, -0.000326082285027951, 0.001998030114918947, 0.005851489491760731, -0.00152919115498662, -0.01049352902919054, -0.0004949368303641677, 0.01034507341682911 },
               { 0.1936647295951843, -0.1553821563720703, 0.08097677677869797, -0.1553915292024612, 0.07063910365104675, -0.07064200937747955, -0.07452370226383209, -0.07064561545848846, 2.338017793590552e-6, 0.02135379239916801, 0.04668679088354111, 0.01425772812217474, -0.03240416571497917, 0.01424358878284693, -3.714383410624578e-6, -0.02135402150452137, 2.312357082701055e-6, -0.005006636492908001, 0.0112832086160779, -0.0008874216582626104, 0.001465020119212568, -0.0008952098432928324, 3.329257651785156e-6, 0.005018250551074743, 0.03432807698845863, -0.0002626278146635741, -7.516405730711995e-6, -0.00190612708684057, 0.008381674997508526, -0.001701926928944886, -0.01555968727916479, -0.001689749420620501, -1.636957449591137e-6, 0.00191504240501672, 0.002953660674393177, -0.0002607621136121452 },
               { 0.1936600357294083, 0.1553818732500076, -0.0809856578707695, 0.1553796231746674, 0.07063203305006027, -0.07064909487962723, -0.07451672106981277, -0.07064765691757202, -9.605389550415566e-7, -0.02136119827628136, -0.04669142886996269, -0.01424569450318813, 0.0324011817574501, -0.01425386685878038, -2.372782546444796e-6, 0.02135879173874855, -2.353005811528419e-6, -0.005020230077207088, 0.01128723286092281, -0.0008855839841999114, 0.001472091767936945, -0.0008923816494643688, -3.221164661226794e-6, 0.005010679364204407, 0.03433771058917046, 0.0002662241167854518, -4.055589215568034e-6, 0.001917017390951514, -0.008367382921278477, 0.001691129291430116, 0.01556096132844687, 0.001701034139841795, -2.822993792506168e-6, -0.001913571730256081, -0.002951174043118954, 0.0002678792807273567 },
               { 0.1936774849891663, -0.1553799360990524, -0.1554140597581863, 0.0809817910194397, -0.0706479474902153, 0.07064774632453918, 0.03726736456155777, -0.07063794136047363, -0.0645262822508812, 0.01913673803210258, 0.04668429121375084, 0.01712313108146191, -0.02559292688965797, 0.01983119919896126, -0.001819810597226024, -0.0256115086376667, -0.002605149289593101, 0.0105650182813406, -0.004375504329800606, -0.004002860281616449, 0.0259363129734993, 0.003993980586528778, 0.0218967329710722, 0.003160886466503143, 0.005381768103688955, -0.00235694763250649, 0.007250241003930569, -0.0009755429346114397, -0.004190138075500727, 0.0003160519408993423, -0.002001245971769094, -0.005844746250659227, 0.001525204512290657, 0.01048038620501757, 0.0005066600278951228, -0.01033200696110725 },
               { 0.1936758607625961, 0.08098332583904266, -0.1554137915372849, -0.155384287238121, -0.07064797729253769, -0.07063906639814377, 0.0372675433754921, 0.07065543532371521, 0.06453098356723785, 0.02561228349804878, 0.0466776043176651, 0.0198378898203373, -0.02559554390609264, 0.01712006144225597, 0.001810911111533642, -0.01913838647305965, 0.002614117693156004, -0.003154528792947531, -0.004375054966658354, 0.003992586396634579, 0.02593493834137917, -0.00399792892858386, -0.02189714461565018, -0.01054920814931393, 0.005373244173824787, -0.01034272089600563, -0.00726094376295805, -0.01048994995653629, -0.004191190004348755, -0.005853439681231976, -0.001996880397200584, 0.0003202520019840449, -0.001528418390080333, 0.0009618229232728481, 0.0005102434661239386, -0.002356514800339937 },
               { 0.09913451224565506, -0.08361271023750305, -0.08360198140144348, -0.08360651880502701, 0.07533738017082214, 0.07532979547977448, -6.399893209163565e-6, 0.07533005625009537, -7.52875075704651e-6, -0.02895288728177547, -0.05669452622532845, -0.02242208831012249, 0.03662943840026855, -0.0224273819476366, 7.744274057586154e-7, 0.02896199189126492, -1.272228473681025e-6, 0.01130338571965694, 0.0120910108089447, -0.004280393943190575, -0.02542278915643692, -0.004278974607586861, 3.229088861189666e-6, -0.01130548119544983, -0.02148831263184547, 0.008424106985330582, -5.921702950217878e-7, 0.007315653841942549, 9.035942980517575e-7, 0.005335936788469553, 0.01230965461581945, 0.005339319352060556, -1.045985413838935e-6, -0.007311847060918808, -0.001110764686018229, 0.008429447188973427 } });
    const SpatialSoundMatrix ACNSN3DmaxRE6oa2M1Spatial(std::vector<std::vector<float>>
    {    { 0.104055218398571, 0.08776325732469559, 0.08775180578231812, 0.08775945007801056, 0.07908053696155548, 0.07907674461603165, -0.00001021269872580888, 0.07906689494848251, 3.724600446730619e-6, 0.03040545992553234, 0.05950988456606865, 0.02354297041893005, -0.03845497965812683, 0.02353360690176487, 1.871514143658715e-7, -0.03039485029876232, 2.853338855857146e-6, 0.01187292672693729, 0.01268510241061449, -0.004492070060223341, -0.0266930740326643, -0.004491710104048252, -2.264444674437982e-6, -0.01186221186071634, -0.02256396412849426, -0.008851191028952599, 4.692272796091856e-6, -0.007681148592382669, -1.761428620739025e-6, -0.005605232901871204, -0.0129291657358408, -0.005598756019026041, 2.464337285346119e-6, 0.007687894627451897, 0.001160255982540548, -0.008846358396112919, -0.007233289070427418, 0.002831992693245411, 2.308546299900627e-6, -0.005874078720808029, 0.004497393034398556, -0.005465983413159847, -0.005319870077073574, -0.005464895162731409, 4.428814918355783e-6, 0.005882727913558483, 0.01409177295863628, 0.002829737029969692, 6.020859018462943e-6 },
        { 0.203282967209816, -0.08501271158456802, 0.1631167978048325, 0.1630914807319641, -0.07415863871574402, -0.07414992153644562, 0.03911476209759712, 0.07415516674518585, 0.06772172451019287, -0.0268822368234396, -0.04900093749165535, -0.02081200666725636, 0.02687536925077438, -0.01796895451843739, -0.001906728721223772, 0.02008503302931786, 0.002739192685112357, -0.003323635086417198, -0.004583665635436773, 0.004193499218672514, 0.02723017521202564, -0.00419502193108201, -0.02298656664788723, -0.01107707154005766, 0.00565672991797328, 0.0108526237308979, 0.007605880498886108, 0.01100532244890928, 0.004400260280817747, 0.006135479081422091, 0.002100444864481688, -0.0003399825072847307, 0.001601103460416198, -0.001033162581734359, -0.0005165391485206783, 0.002477838424965739, 0.008366743102669716, 0.003511058865115047, 0.001616288558579981, 0.003844423918053508, 0.00204804353415966, 0.007052384316921234, -0.003140095854178071, -0.007055019494146109, -0.0006864070310257375, 0.008931226097047329, 0.006268794648349285, 0.005220806691795588, -0.001025310019031167 },
        { 0.2032853215932846, 0.163093164563179, 0.1631208211183548, -0.08500786870718002, -0.0741630420088768, 0.07415136694908142, 0.03912220895290375, -0.0741485208272934, -0.06773656606674194, -0.02008770033717155, -0.0490022711455822, -0.01796862110495567, 0.02687445282936096, -0.02081857062876225, 0.001898780115880072, 0.02688825689256191, -0.002742426935583353, 0.01107852440327406, -0.004589562304317951, -0.004198845475912094, 0.02722035720944405, 0.00419370224699378, 0.02297677099704742, 0.003314415225759149, 0.005651171784847975, 0.002477665198966861, -0.007620769087225199, 0.001024988829158247, 0.004401118494570255, -0.0003422664885874838, 0.002097202464938164, 0.006141925696283579, -0.001605093129910529, -0.0110143581405282, -0.0005194961559027433, 0.01085851993411779, 0.00837385281920433, 0.005218624137341976, -0.001634950167499483, -0.008935017511248589, 0.002052630763500929, -0.007049889303743839, -0.003141482593491673, 0.007050261832773685, 0.0006841669674031436, -0.003849389730021358, 0.006274886894971132, 0.003507200861349702, 0.001022253185510635 },
        { 0.2032769471406937, -0.1630944162607193, 0.0849960669875145, -0.1631042063236237, 0.07414519041776657, -0.07414823770523071, -0.0782226026058197, -0.07415192574262619, 2.457591790516744e-6, 0.02241369895637035, 0.04900400340557098, 0.0149654308333993, -0.03401250392198563, 0.01495057065039873, -3.906689471477875e-6, -0.02241387777030468, 2.427329491183627e-6, -0.005255129653960466, 0.0118432454764843, -0.0009314769995398819, 0.001537737902253866, -0.000939643126912415, 3.498563955872669e-6, 0.005267326254397631, 0.03603195026516914, -0.0002756667381618172, -7.89215846452862e-6, -0.002000734908506274, 0.008797674439847469, -0.001786399399861693, -0.016331996768713, -0.001773615716956556, -1.715803364277235e-6, 0.002010098891332746, 0.003100263420492411, -0.0002737038885243237, -0.009771848097443581, 0.001594457775354385, 9.556240001984406e-6, 0.001613430329598486, 0.007825445383787155, 0.008461951278150082, -0.001132465084083378, 0.008471328765153885, 8.397557849093573e-7, -0.001591430976986885, 0.007024947088211775, 0.001586395082995296, 5.703091687792039e-7 },
        { 0.2032720297574997, 0.1630940437316895, -0.08500538766384125, 0.163091778755188, 0.07413778454065323, -0.07415571808815002, -0.07821537554264069, -0.07415415346622467, -1.006360207611579e-6, -0.02242145501077175, -0.04900902509689331, -0.01495275180786848, 0.03400939330458641, -0.01496133860200644, -2.49287791120878e-6, 0.02241893298923969, -2.468168304403662e-6, -0.005269408691674471, 0.01184745319187641, -0.0009295346681028605, 0.001545156352221966, -0.0009366782614961267, -3.385262743904605e-6, 0.00525937881320715, 0.03604209423065186, 0.0002794366446323693, -4.256043666828191e-6, 0.002012171316891909, -0.008782691322267056, 0.001775065553374588, 0.01633333042263985, 0.001785464119166136, -2.961619202324073e-6, -0.002008549403399229, -0.003097652457654476, 0.0002811780432239175, -0.009763571433722973, 0.001595289562828839, -5.476140358950943e-6, 0.001609008992090821, 0.007820429280400276, 0.008460981771349907, -0.00112833536695689, 0.008471623994410038, 4.86160899981769e-7, -0.0016064791707322, 0.007023971993476152, 0.001594000495970249, 8.008130407688441e-7 },
        { 0.2032904624938965, -0.1630917489528656, -0.1631281226873398, 0.08500126749277115, -0.0741545632481575, 0.07415433973073959, 0.03911709785461426, -0.0741441398859024, -0.06772910803556442, 0.02008657343685627, 0.04900140687823296, 0.0179730299860239, -0.02686320804059505, 0.02081556618213654, -0.001910133636556566, -0.0268827062100172, -0.002734457841143012, 0.01108941622078419, -0.004592683631926775, -0.004201537929475307, 0.02722364664077759, 0.004192216321825981, 0.02298357523977757, 0.003317777998745441, 0.005648885853588581, -0.002473937347531319, 0.007610096130520105, -0.001023968681693077, -0.004398113116621971, 0.0003317444934509695, -0.00210057757794857, -0.006134850438684225, 0.001600912190042436, 0.01100058015435934, 0.0005318098119460046, -0.01084485463798046, 0.008365457877516747, 0.005217851139605045, -0.001616622670553625, -0.008930028416216373, 0.002053582109510899, -0.007046202197670937, -0.003145016031339765, 0.007046606857329607, 0.000684710219502449, -0.003835448995232582, 0.006278758868575096, 0.003498202189803123, 0.001022902084514499 },
        { 0.2032885104417801, 0.08500286191701889, -0.1631277352571487, -0.163096696138382, -0.0741545781493187, -0.07414507865905762, 0.03911731764674187, 0.07416238635778427, 0.06773390620946884, 0.02688354440033436, 0.04899432510137558, 0.02082254737615585, -0.02686595916748047, 0.01796980574727058, 0.001900794333778322, -0.0200883112847805, 0.002743865363299847, -0.003311102744191885, -0.00459220539778471, 0.004190761595964432, 0.02722221426665783, -0.004196359775960445, -0.02298401109874249, -0.01107282098382711, 0.005639940965920687, -0.01085607055574656, -0.007621339522302151, -0.01101064309477806, -0.004399220459163189, -0.006143969018012285, -0.002096004085615277, 0.0003361412964295596, -0.001604279153980315, 0.001009564264677465, 0.0005355664761736989, -0.002473480068147182, 0.008363486267626286, 0.00350663554854691, 0.001634495332837105, 0.00384847167879343, 0.002053285483270884, 0.007049876730889082, -0.003137359162792563, -0.007057240232825279, -0.0006828114856034517, 0.00894490722566843, 0.006274648476392031, 0.005211708601564169, -0.001021114992909133 },
        { 0.1040549799799919, -0.08776282519102097, -0.08775153756141663, -0.08775623142719269, 0.07907667011022568, 0.07906880229711533, -6.718187250953633e-6, 0.07906897366046906, -7.90168451203499e-6, -0.03038991242647171, -0.05950848385691643, -0.02353500016033649, 0.03844751417636871, -0.0235405471175909, 8.142680485434539e-7, 0.0303994994610548, -1.335789193035453e-6, 0.01186441257596016, 0.01269113924354315, -0.004492853302508593, -0.02668463997542858, -0.004491355270147324, 3.390645588297048e-6, -0.011866619810462, -0.02255488745868206, 0.008842234499752522, -6.226551363397448e-7, 0.007678766269236803, 9.484052725383663e-7, 0.005600784439593554, 0.01292065437883139, 0.005604334641247988, -1.098017150980013e-6, -0.007674763910472393, -0.001165896654129028, 0.008847843855619431, -0.007231875322759151, 0.002837180159986019, -9.735917046782561e-6, -0.005875276401638985, 0.004489359445869923, -0.005461863707751036, -0.005315814632922411, -0.005464264191687107, -2.154788035113597e-6, 0.005871939472854137, 0.0140831284224987, 0.002829762874171138, -3.568871079551172e-6 } });
    const SpatialSoundMatrix ACNSN3DmaxRE7oa2M1Spatial(std::vector<std::vector<float>>
   {    { 0.1078695729374886,   0.09098037332296371,   0.09096850454807281,   0.09097640961408615,   0.08197928220033646,   0.08197538554668427,   -0.00001058804173226235,   0.08196530491113663,   3.858696800307371e-6,   0.03152007982134819,   0.0616912730038166,   0.02440597116947174,   -0.03986464068293571,   0.02439629472792149,   1.94676758269452e-7,   -0.03150906041264534,   2.957833203254268e-6,   0.0123081486672163,   0.01315008848905563,   -0.004656735341995955,   -0.02767156809568405,   -0.004656361881643534,   -2.34730691772711e-6,   -0.01229703053832054,   -0.02339109219610691,   -0.009175639599561691,   4.866742074227659e-6,   -0.007962713018059731,   -1.825963863666402e-6,   -0.005810711532831192,   -0.01340312603861094,   -0.005803992040455341,   2.554173079261091e-6,   0.007969708181917667,   0.001202785526402295,   -0.009170630946755409,   -0.007498444523662329,   0.002935805357992649,   2.395110641373321e-6,   -0.006089402362704277,   0.0046622552908957,   -0.005666349083185196,   -0.00551487784832716,   -0.005665217991918325,   4.590540811477695e-6,   0.006098370067775249,   0.01460833661258221,   0.002933464013040066,   6.245420991035644e-6,   -0.003166921902447939,   0.003314293222501874,   0.00447017652913928,   1.818996679503471e-6,   -0.00004757375063491054,   0.003603179706260562,   -0.004381540697067976,   0.00176537164952606,   -0.004384711850434542,   -3.108755436187494e-6,   0.00005557185431825928,   0.006788143888115883,   0.004467329941689968,   -3.550331030055531e-6,   0.003174983896315098 },
       { 0.2107347697019577,   -0.0881289467215538,   0.1690960973501205,   0.1690699905157089,   -0.07687689363956451,   -0.07686808705329895,   0.04054858908057213,   0.07687339931726456,   0.07020421326160431,   -0.02786766178905964,   -0.05079704150557518,   -0.02157492376863956,   0.02786049991846085,   -0.01862762868404388,   -0.001976618077605963,   0.02082129940390587,   0.002839599037542939,   -0.003445475827902555,   -0.004751685075461864,   0.004347224719822407,   0.02822840586304665,   -0.004348804242908955,   -0.02382924593985081,   -0.01148311048746109,   0.005864073988050222,   0.01125045027583838,   0.007884686812758446,   0.01140874531120062,   0.004561559297144413,   0.00636038463562727,   0.002177430083975196,   -0.0003524498024489731,   0.001659800414927304,   -0.001071037375368178,   -0.0005354750319384038,   0.002568674273788929,   0.008673430420458317,   0.003639755304902792,   0.001675534062087536,   0.003985351882874966,   0.002123116515576839,   0.007310911547392607,   -0.00325519684702158,   -0.007313629612326622,   -0.0007115639746189117,   0.00925862044095993,   0.006498586852103472,   0.005412182305008173,   -0.001062891096808016,   0.00366617925465107,   0.001036921050399542,   -0.003256266238167882,   -0.004045797511935234,   0.0006342517444863915,   0.004571577534079552,   0.004402717109769583,   -0.005600301548838615,   0.002705481834709644,   -0.0006464864709414542,   -0.0000775355365476571,   0.0009000096470117569,   0.004373177886009216,   0.002728485036641359,   -0.003671730868518353 },
       { 0.2107373476028442,   0.1690717786550522,   0.1691000461578369,   -0.08812405914068222,   -0.07688156515359879,   0.07686939090490341,   0.04055629298090935,   -0.07686657458543777,   -0.0702194944024086,   -0.02082403376698494,   -0.05079860985279083,   -0.01862729713320732,   0.02785955742001534,   -0.02158172056078911,   0.001968384487554431,   0.0278739295899868,   -0.002842954592779279,   0.01148464251309633,   -0.004757801070809364,   -0.00435275211930275,   0.02821815386414528,   0.00434742821380496,   0.02381896413862705,   0.00343591277487576,   0.005858324468135834,   0.002568493131548166,   -0.007900123484432697,   0.00106256059370935,   0.004562451038509607,   -0.0003548057575244457,   0.002174077788367867,   0.006367062218487263,   -0.001663927920162678,   -0.01141813863068819,   -0.0005385443801060319,   0.01125657372176647,   0.008680812083184719,   0.005409920588135719,   -0.001694883452728391,   -0.009262554347515106,   0.002127871382981539,   -0.007308310363441706,   -0.00325663760304451,   0.00730870570987463,   0.0007092460873536766,   -0.003990491386502981,   0.00650491751730442,   0.003635769011452794,   0.001059725182130933,   0.003661169204860926,   0.001036515808664262,   0.00438536936417222,   0.004031080286949873,   0.00006230255530681461,   0.004566862713545561,   0.002707479987293482,   -0.005602108314633369,   0.004401864018291235,   0.0006581429042853415,   -0.0006385663873516023,   0.0008819725480861962,   -0.003253876464441419,   -0.002704503713175654,   -0.003663633484393358 },
       { 0.2107285708189011,   -0.169073224067688,   0.08811172842979431,   -0.16908298432827,   0.07686314731836319,   -0.07686624675989151,   -0.08108986914157867,   -0.07687017321586609,   2.552511432440951e-6,   0.02323528565466404,   0.0508003942668438,   0.01551402173936367,   -0.03525926917791367,   0.01549860462546349,   -4.051402811455773e-6,   -0.02323550172150135,   2.519167537684552e-6,   -0.005447781644761562,   0.01227736752480268,   -0.000965625571552664,   0.001594109460711479,   -0.000974091759417206,   3.623414158937521e-6,   0.005460417363792658,   0.03735281899571419,   -0.0002857672225218266,   -8.183666068362072e-6,   -0.002074078191071749,   0.00912018958479166,   -0.00185188022442162,   -0.01693066023290157,   -0.001838632742874324,   -1.781701485015219e-6,   0.002083782339468598,   0.003213908523321152,   -0.0002837378706317395,   -0.01013004872947931,   0.001652905950322747,   9.907007552101277e-6,   0.001672569429501891,   0.008112300187349319,   0.008772129192948341,   -0.001173976226709783,   0.008781854063272476,   8.71098791321856e-7,   -0.001649766927585006,   0.007282459642738104,   0.001644545351155102,   5.931925102231617e-7,   -0.003060045419260859,   -0.006178118754178286,   -0.002330505754798651,   -9.664240678830538e-6,   -0.004923621192574501,   0.0001558011281304061,   -0.000969159125816077,   0.002912898082286119,   -0.000968479027505964,   2.829645154633909e-6,   0.004915651865303516,   0.005940350703895092,   -0.002297435654327273,   1.795535126802861e-6,   0.003061915514990687 },
       { 0.2107233852148056,   0.1690725982189178,   -0.08812139183282852,   0.1690703183412552,   0.07685549557209015,   -0.07687400281429291,   -0.08108247071504593,   -0.07687241584062576,   -1.049256184160186e-6,   -0.02324333228170872,   -0.05080549046397209,   -0.01550090592354536,   0.03525611385703087,   -0.01550980284810066,   -2.582975866971537e-6,   0.02324072644114494,   -2.562066356404102e-6,   -0.005462559871375561,   0.01228177081793547,   -0.0009636098402552307,   0.001601797644980252,   -0.0009710119338706136,   -3.507334895402892e-6,   0.005452162120491266,   0.03736326470971107,   0.000289677525870502,   -4.418723165144911e-6,   0.002085928805172443,   -0.00910462997853756,   0.001840137410908937,   0.01693206094205379,   0.001850915956310928,   -3.071043238378479e-6,   -0.002082176273688674,   -0.003211202332749963,   0.0002914828073699027,   -0.01012147776782513,   0.001653767307288945,   -5.674358817486791e-6,   0.001667987089604139,   0.008107107132673264,   0.008771138265728951,   -0.001169696450233459,   0.008782173506915569,   5.04303670822992e-7,   -0.001665374147705734,   0.0072814398445189,   0.001652437495067716,   8.293312703244737e-7,   0.003070475533604622,   0.006189728621393442,   0.002304238267242908,   -4.354191787570016e-6,   0.004917188081890345,   -0.0001612234191270545,   0.0009729985031299293,   -0.002920098602771759,   0.0009683273383416235,   2.720901193242753e-6,   -0.004927893169224262,   -0.00593597674742341,   0.002326575573533773,   7.978692337928806e-7,   -0.003068422665819526 },
       { 0.2107426226139069,   -0.1690702438354492,   -0.1691078394651413,   0.08811721205711365,   -0.07687275856733322,   0.07687265425920486,   0.04055104777216911,   -0.07686199992895126,   -0.07021195441484451,   0.02082289196550846,   0.05079767853021622,   0.01863185316324234,   -0.02784793078899384,   0.02157855406403542,   -0.00198015384376049,   -0.02786810137331486,   -0.002834695624187589,   0.0114959217607975,   -0.004761027172207832,   -0.004355556331574917,   0.02822157554328442,   0.004345892928540707,   0.02382608503103256,   0.003439394058659673,   0.005855960305780172,   -0.002564627211540937,   0.007889064960181713,   -0.001061499235220253,   -0.004559328779578209,   0.0003439031133893877,   -0.00217757816426456,   -0.006359738297760487,   0.001659596222452819,   0.01140382792800665,   0.0005513028590939939,   -0.0112423887476325,   0.008672106079757214,   0.005409125704318285,   -0.001675884006544948,   -0.009257366880774498,   0.002128852996975183,   -0.00730449054390192,   -0.003260302823036909,   0.007304918486624956,   0.0007098131463862956,   -0.003976048901677132,   0.006508913356810808,   0.003626426914706826,   0.001060398877598345,   -0.003658422967419028,   -0.001031191204674542,   -0.004392453469336033,   -0.00404689135029912,   -0.00007582349644508213,   -0.004574581980705261,   -0.002702518831938505,   0.005595623981207609,   -0.004401165060698986,   -0.000649093184620142,   0.0006318163359537721,   -0.0008876840001903474,   0.003266196697950363,   0.002721372991800308,   0.003660087008029222 },
       { 0.2107404768466949,   0.08811887353658676,   -0.1691076755523682,   -0.1690753549337387,   -0.07687275856733322,   -0.07686304301023483,   0.04055121913552284,   0.07688090205192566,   0.07021679729223251,   0.02786898612976074,   0.05079043656587601,   0.02158582210540771,   -0.02785072848200798,   0.01862852647900581,   0.001970469020307064,   -0.02082464657723904,   0.002844445873051882,   -0.003432477824389935,   -0.00476054148748517,   0.004344382788985968,   0.0282200500369072,   -0.004350194241851568,   -0.02382650412619114,   -0.0114787220954895,   0.005846682004630566,   -0.01125402189791203,   -0.007900701835751534,   -0.01141421962529421,   -0.004560474772006273,   -0.006369184702634811,   -0.002172828884795308,   0.0003484641492832452,   -0.001663085189647973,   0.001046568271704018,   0.0005551983485929668,   -0.002564148977398872,   0.008670068345963955,   0.003635175060480833,   0.001694406499154866,   0.003989549819380045,   0.002128552179783583,   0.007308298256248236,   -0.003252362832427025,   -0.007315941620618105,   -0.0007078394410200417,   0.009272795170545578,   0.006504647899419069,   0.005402749869972467,   -0.001058545778505504,   -0.003652511863037944,   -0.001031416119076312,   0.003255966585129499,   0.004021910484880209,   -0.0006305415299721062,   -0.004568939562886953,   -0.004397681914269924,   0.005592777393758297,   -0.002703712554648519,   0.0006565912626683712,   0.00006628801202168688,   -0.0008789493585936725,   -0.004389587324112654,   -0.00270600663498044,   0.003660358255729079 },
       { 0.1078692227602005,   -0.09097997099161148,   -0.09096821397542953,   -0.09097319841384888,   0.08197532594203949,   0.08196719735860825,   -6.963524356251583e-6,   0.08196748048067093,   -8.190875632863026e-6,   -0.03150393068790436,   -0.06168984994292259,   -0.02439771220088005,   0.03985688462853432,   -0.02440346218645573,   8.457059266220313e-7,   0.03151382878422737,   -1.385181690238824e-6,   0.01229932997375727,   0.01315635908395052,   -0.004657547920942307,   -0.0276628490537405,   -0.004655990283936262,   3.515673370202421e-6,   -0.01230160426348448,   -0.0233816746622324,   0.009166369214653969,   -6.458218422267237e-7,   0.007960235700011253,   9.84881580734509e-7,   0.005806089844554663,   0.01339426822960377,   0.005809777416288853,   -1.134133640334767e-6,   -0.007956104353070259,   -0.001208635047078133,   0.009172180667519569,   -0.007496977690607309,   0.002941184211522341,   -0.00001009510469884844,   -0.006090640556067228,   0.004653929732739925,   -0.005662079900503159,   -0.005510670598596334,   -0.005664566997438669,   -2.235760121038766e-6,   0.006087187677621841,   0.01459936611354351,   0.002933500800281763,   -3.69984400094836e-6,   0.003168181050568819,   -0.003316950052976608,   -0.00445543834939599,   8.490900654578581e-6,   0.00005298406176734716,   -0.003596568945795298,   0.004384323488920927,   -0.001763655687682331,   0.004379241727292538,   3.169892806909047e-6,   -0.00005385044642025605,   -0.006784311961382627,   -0.004471007734537125,   6.810926606704015e-6,   -0.003172114957123995 } });
	const SpatialSoundMatrix M1Spatial2M1Horizon(std::vector<std::vector<float>>
	{   { oor2, 0, 0, 0, oor2, 0, 0, 0 },
		{ 0, oor2, 0, 0, 0, oor2, 0, 0 },
		{ 0, 0, oor2, 0, 0, 0, oor2, 0 },
		{ 0, 0, 0, oor2, 0, 0, 0, oor2 } });
	const SpatialSoundMatrix M1Spatial2M1HorizonPairs(std::vector<std::vector<float>>
	{   { oor2, 0, 0, 0, oor2, 0, 0, 0 }, //000L
		{ 0, oor2, 0, 0, 0, oor2, 0, 0 }, //000R
		{ 0, oor2, 0, 0, 0, oor2, 0, 0 }, //090L
		{ 0, 0, 0, oor2, 0, 0, 0, oor2 }, //090R
		{ 0, 0, 0, oor2, 0, 0, 0, oor2 }, //180L
		{ 0, 0, oor2, 0, 0, 0, oor2, 0 }, //180R
		{ 0, 0, oor2, 0, 0, 0, oor2, 0 }, //270L
		{ oor2, 0, 0, 0, oor2, 0, 0, 0 } }); //270R
	const SpatialSoundMatrix M1Spatial2M1SpatialFaces(std::vector<std::vector<float>>
		//Fc, Lc, Bc, Rc, Tc, Bc
	{   { r2o3, r2o3, 0, 0, r2o3, r2o3, 0, 0 },
		{ r2o3, 0, r2o3, 0, r2o3, 0, r2o3, 0 },
		{ 0, 0, r2o3, r2o3, 0, 0, r2o3, r2o3 },
		{ 0, r2o3, 0, r2o3, 0, r2o3, 0, r2o3 },
		{ r2o3, r2o3, r2o3, r2o3, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, r2o3, r2o3, r2o3, r2o3 } });
	const SpatialSoundMatrix M1Spatial2M1SpatialPairs(std::vector<std::vector<float>> //TODO: fix this
	{   { 1, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 1, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 1, 0, 0, 0, 0, 0 },
		{ 1, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 1, 0, 0, 0, 0 },
		{ 0, 0, 1, 0, 0, 0, 0, 0 },
		{ 0, 1, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 1, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 1, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 1, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 1, 0 },
		{ 0, 0, 0, 0, 1, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 1 },
		{ 0, 0, 0, 0, 0, 0, 1, 0 },
		{ 0, 0, 0, 0, 0, 1, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 1 } });

	// --- M1Spatial + Stereo ( std::vector<std::vector<float>>S) ---
	const SpatialSoundMatrix M1SpatialS2FuMa(std::vector<std::vector<float>>
	{   { oor2, oor2, oor2, oor2, oor2, oor2, oor2, oor2, 1, 1 },
		{ 0.5f, 0.5f, -0.5f, -0.5f, 0.5f, 0.5f, -0.5f, -0.5f, 0, 0 },
		{ 0.5f, -0.5f, 0.5f, -0.5f, 0.5f, -0.5f, 0.5f, -0.5f, 0, 0 },
		{ oor2, oor2, oor2, oor2, -oor2, -oor2, -oor2, -oor2, 0, 0 } });
	const SpatialSoundMatrix M1SpatialS2ACNSN3D(std::vector<std::vector<float>>
	{   { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 0.5f, -0.5f, 0.5f, -0.5f, 0.5f, -0.5f, 0.5f, -0.5f, 0, 0 },
		{ oor2, oor2, oor2, oor2, -oor2, -oor2, -oor2, -oor2, 0, 0 },
		{ 0.5f, 0.5f, -0.5f, -0.5f, 0.5f, 0.5f, -0.5f, -0.5f, 0, 0 } });
	const SpatialSoundMatrix M1SpatialS2M1Horizon(std::vector<std::vector<float>>
	{   { 0.5f, 0, 0, 0, 0.5f, 0, 0, 0, 0.25f, 0.25f },
		{ 0, 0.5f, 0, 0, 0, 0.5f, 0, 0, 0.25f, 0.25f },
		{ 0, 0, 0.5f, 0, 0, 0, 0.5f, 0, 0.25f, 0.25f },
		{ 0, 0, 0, 0.5f, 0, 0, 0, 0.5f, 0.25f, 0.25f } });
	const SpatialSoundMatrix M1SpatialS2M1HorizonPairs(std::vector<std::vector<float>>
	{   { 0.5f, 0, 0, 0, 0.5f, 0, 0, 0, 1, 0 },
		{ 0, 0.5f, 0, 0, 0, 0.5f, 0, 0, 0, 1 },
		{ 0, 0.5f, 0, 0, 0, 0.5f, 0, 0, 1, 0 },
		{ 0, 0, 0, 0.5f, 0, 0, 0, 0.5f, 0, 1 },
		{ 0, 0, 0, 0.5f, 0, 0, 0, 0.5f, 1, 0 },
		{ 0, 0, 0.5f, 0, 0, 0, 0.5f, 0, 0, 1 },
		{ 0, 0, 0.5f, 0, 0, 0, 0.5f, 0, 1, 0 },
		{ 0.5f, 0, 0, 0, 0.5f, 0, 0, 0, 0, 1 } });
	const SpatialSoundMatrix M1SpatialS2M1Spatial(std::vector<std::vector<float>>
	{   { 1, 0, 0, 0, 0, 0, 0, 0, 0.125f, 0.125f },
		{ 0, 1, 0, 0, 0, 0, 0, 0, 0.125f, 0.125f },
		{ 0, 0, 1, 0, 0, 0, 0, 0, 0.125f, 0.125f },
		{ 0, 0, 0, 1, 0, 0, 0, 0, 0.125f, 0.125f },
		{ 0, 0, 0, 0, 1, 0, 0, 0, 0.125f, 0.125f },
		{ 0, 0, 0, 0, 0, 1, 0, 0, 0.125f, 0.125f },
		{ 0, 0, 0, 0, 0, 0, 1, 0, 0.125f, 0.125f },
		{ 0, 0, 0, 0, 0, 0, 0, 1, 0.125f, 0.125f } });
	const SpatialSoundMatrix M1SpatialS2M1SpatialPairs(std::vector<std::vector<float>>
	{   { 1, 0, 0, 0, 0, 0, 0, 0, 1, 0 },
		{ 0, 1, 0, 0, 0, 0, 0, 0, 0, 1 },
		{ 0, 0, 1, 0, 0, 0, 0, 0, 1, 0 },
		{ 1, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
		{ 0, 0, 0, 1, 0, 0, 0, 0, 1, 0 },
		{ 0, 0, 1, 0, 0, 0, 0, 0, 0, 1 },
		{ 0, 1, 0, 0, 0, 0, 0, 0, 1, 0 },
		{ 0, 0, 0, 1, 0, 0, 0, 0, 0, 1 },
		{ 0, 0, 0, 0, 1, 0, 0, 0, 1, 0 },
		{ 0, 0, 0, 0, 0, 1, 0, 0, 0, 1 },
		{ 0, 0, 0, 0, 0, 0, 1, 0, 1, 0 },
		{ 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 },
		{ 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 },
		{ 0, 0, 0, 0, 0, 0, 1, 0, 0, 1 },
		{ 0, 0, 0, 0, 0, 1, 0, 0, 1, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 1, 0, 1 },
	});

	// --- Surround to M1Spatial ---;
	const SpatialSoundMatrix Mono2M1Spatial(std::vector<std::vector<float>>
	{   { r2o8 },
		{ r2o8 },
		{ r2o8 },
		{ r2o8 },
		{ r2o8 },
		{ r2o8 },
		{ r2o8 },
		{ r2o8 } });
	const SpatialSoundMatrix Stereo2M1Spatial(std::vector<std::vector<float>>
	{   { r2o2, 0 },
		{ 0, r2o2 },
		{ r2o2, 0 },
		{ 0, r2o2 },
		{ r2o2, 0 },
		{ 0, r2o2 },
		{ r2o2, 0 },
		{ 0, r2o2 } });
	const SpatialSoundMatrix Stereo_Cinema2M1Spatial(std::vector<std::vector<float>>
		//fix ratio between front and back
	{   { r2o2, 0 },
		{ 0, r2o2 },
		{ r2o20, 0 },
		{ 0, r2o20 },
		{ r2o2, 0 },
		{ 0, r2o2 },
		{ r2o20, 0 },
		{ 0, r2o20 } });
	const SpatialSoundMatrix LCR2M1Spatial(std::vector<std::vector<float>>
	{   { r2o2, r2o8, 0 },
		{ 0, r2o8, r2o2 },
		{ r2o8, r2o8, 0 },
		{ 0, r2o8, r2o8 },
		{ r2o2, r2o8, 0 },
		{ 0, r2o8, r2o2 },
		{ r2o8, r2o8, 0 },
		{ 0, r2o8, r2o8 }, });
	const SpatialSoundMatrix FiveOh2M1Spatial(std::vector<std::vector<float>>
		//L, C , R, Ls, Rs
	{   { r2o2, r2o8, 0, 0, 0 },
		{ 0, r2o8, r2o2, 0, 0 },
		{ 0, r2o8, 0, r2o2, 0 },
		{ 0, r2o8, 0, 0, r2o2 },
		{ r2o2, r2o8, 0, 0, 0 },
		{ 0, r2o8, r2o2, 0, 0 },
		{ 0, r2o8, 0, r2o2, 0 },
		{ 0, r2o8, 0, 0, r2o2 } });
	const SpatialSoundMatrix FiveOneFilm2M1Spatial(std::vector<std::vector<float>>
		//L, C, R, Ls, Rs, LFE
	{   { r2o2, r2o8, 0, 0, 0, r2o8 },
		{ 0, r2o8, r2o2, 0, 0, r2o8 },
		{ 0, r2o8, 0, r2o2, 0, r2o8 },
		{ 0, r2o8, 0, 0, r2o2, r2o8 },
		{ r2o2, r2o8, 0, 0, 0, r2o8 },
		{ 0, r2o8, r2o2, 0, 0, r2o8 },
		{ 0, r2o8, 0, r2o2, 0, r2o8 },
		{ 0, r2o8, 0, 0, r2o2, r2o8 } });
	const SpatialSoundMatrix FiveOneFilm_Cinema2M1Spatial(std::vector<std::vector<float>>
		//L, C, R, Ls, Rs, LFE
	{   { r2o2, r2o4, 0, 0, 0, r2o8 },
		{ 0, r2o4, r2o2, 0, 0, r2o8 },
		{ 0, r2o20, 0, r2o2, 0, r2o8 },
		{ 0, r2o20, 0, 0, r2o2, r2o8 },
		{ r2o2, r2o4, 0, 0, 0, r2o8 },
		{ 0, r2o4, r2o2, 0, 0, r2o8 },
		{ 0, r2o20, 0, r2o2, 0, r2o8 },
		{ 0, r2o20, 0, 0, r2o2, r2o8 } });
	const SpatialSoundMatrix FiveOneSmpte2M1Spatial(std::vector<std::vector<float>>
		//L, R, C, LFE, Ls, Rs
	{   { r2o2, 0, r2o8, r2o8, 0, 0 },
		{ 0, r2o2, r2o8, r2o8, 0, 0 },
		{ 0, 0, r2o8, r2o8, r2o2, 0 },
		{ 0, 0, r2o8, r2o8, 0, r2o2 },
		{ r2o2, 0, r2o8, r2o8, 0, 0 },
		{ 0, r2o2, r2o8, r2o8, 0, 0 },
		{ 0, 0, r2o8, r2o8, r2o2, 0 },
		{ 0, 0, r2o8, r2o8, 0, r2o2 } });
	const SpatialSoundMatrix FiveOneDts2M1Spatial(std::vector<std::vector<float>>
		//L, R, Ls, Rs, C, LFE
	{   { r2o2, 0, 0, 0, r2o8, r2o8 },
		{ 0, r2o2, 0, 0, r2o8, r2o8 },
		{ 0, 0, r2o2, 0, r2o8, r2o8 },
		{ 0, 0, 0, r2o2, r2o8, r2o8 },
		{ r2o2, 0, 0, 0, r2o8, r2o8 },
		{ 0, r2o2, 0, 0, r2o8, r2o8 },
		{ 0, 0, r2o2, 0, r2o8, r2o8 },
		{ 0, 0, 0, r2o2, r2o8, r2o8 } });
	const SpatialSoundMatrix SixOh2M1Spatial(std::vector<std::vector<float>> //BLANK
	{   { 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0 } });
	const SpatialSoundMatrix SevenOnePt2M1Spatial(std::vector<std::vector<float>>
		//L, C, R, Lss, Rss, Lsr, Rsr, LFE
	{   { r2o2, r2o8, 0, r2o4, 0, 0, 0, r2o8 },
		{ 0, r2o8, r2o2, 0, r2o4, 0, 0, r2o8 },
		{ 0, r2o8, 0, r2o4, 0, r2o2, 0, r2o8 },
		{ 0, r2o8, 0, 0, r2o4, 0, r2o2, r2o8 },
		{ r2o2, r2o8, 0, r2o4, 0, 0, 0, r2o8 },
		{ 0, r2o8, r2o2, 0, r2o4, 0, 0, r2o8 },
		{ 0, r2o8, 0, r2o4, 0, r2o2, 0, r2o8 },
		{ 0, r2o8, 0, 0, r2o4, 0, r2o2, r2o8 } });
	const SpatialSoundMatrix SevenOnePt_Cinema2M1Spatial(std::vector<std::vector<float>>
		//L, C, R, Lss, Rss, Lsr, Rsr, LFE ( std::vector<std::vector<float>>with front facing
	{   { r2o2, r2o4, 0, r2o4, 0, 0, 0, r2o8 },
		{ 0, r2o4, r2o2, 0, r2o4, 0, 0, r2o8 },
		{ 0, 0, 0, r2o4, 0, r2o2, 0, r2o8 },
		{ 0, 0, 0, 0, r2o4, 0, r2o2, r2o8 },
		{ r2o2, r2o4, 0, r2o4, 0, 0, 0, r2o8 },
		{ 0, r2o4, r2o2, 0, r2o4, 0, 0, r2o8 },
		{ 0, 0, 0, r2o4, 0, r2o2, 0, r2o8 },
		{ 0, 0, 0, 0, r2o4, 0, r2o2, r2o8 } });
	const SpatialSoundMatrix SevenZero_Cinema2M1Spatial(std::vector<std::vector<float>>
		//L, C, R, Lss, Rss, Lsr, Rsr ( std::vector<std::vector<float>>with front facing
	{   { r2o2, r2o4, 0, r2o4, 0, 0, 0 },
		{ 0, r2o4, r2o2, 0, r2o4, 0, 0 },
		{ 0, 0, 0, r2o4, 0, r2o2, 0 },
		{ 0, 0, 0, 0, r2o4, 0, r2o2 },
		{ r2o2, r2o4, 0, r2o4, 0, 0, 0 },
		{ 0, r2o4, r2o2, 0, r2o4, 0, 0 },
		{ 0, 0, 0, r2o4, 0, r2o2, 0 },
		{ 0, 0, 0, 0, r2o4, 0, r2o2 } });
	const SpatialSoundMatrix SevenOneSDDS2M1Spatial(std::vector<std::vector<float>>
		//L, Lc, C, Rc, R, Ls, Rs, LFE
	{   { r2o2, r2o4, r2o8, 0, 0, 0, 0, r2o8 },
		{ 0, 0, r2o8, r2o4, r2o2, 0, 0, r2o8 },
		{ 0, 0, r2o8, 0, 0, r2o2, 0, r2o8 },
		{ 0, 0, r2o8, 0, 0, 0, r2o2, r2o8 },
		{ r2o2, r2o4, r2o8, 0, 0, 0, 0, r2o8 },
		{ 0, 0, r2o8, r2o4, r2o2, 0, 0, r2o8 },
		{ 0, 0, r2o8, 0, 0, r2o2, 0, r2o8 },
		{ 0, 0, r2o8, 0, 0, 0, r2o2, r2o8 } });
	const SpatialSoundMatrix SevenZeroSDDS2M1Spatial(std::vector<std::vector<float>>
		//L, Lc, C, Rc, R, Ls, Rs
	{   { r2o2, r2o4, r2o8, 0, 0, 0, 0 },
		{ 0, 0, r2o8, r2o4, r2o2, 0, 0 },
		{ 0, 0, r2o8, 0, 0, r2o2, 0 },
		{ 0, 0, r2o8, 0, 0, 0, r2o2 },
		{ r2o2, r2o4, r2o8, 0, 0, 0, 0 },
		{ 0, 0, r2o8, r2o4, r2o2, 0, 0 },
		{ 0, 0, r2o8, 0, 0, r2o2, 0 },
		{ 0, 0, r2o8, 0, 0, 0, r2o2 } });
	const SpatialSoundMatrix SevenOneTwo2M1Spatial(std::vector<std::vector<float>>
		//L, C, R, Lss, Rss, Lsr, Rsr, LFE, Lts, Rts
	{   { r2o2, r2o4, 0, r2o4, 0, 0, 0, r2o8, 0.3750f, 0.1250f },
		{ 0, r2o4, r2o2, 0, r2o4, 0, 0, r2o8, 0.1250f, 0.3750f },
		{ 0, 0, 0, r2o4, 0, r2o2, 0, r2o8, 0.3750f, 0.1250f },
		{ 0, 0, 0, 0, r2o4, 0, r2o2, r2o8, 0.1250f, 0.3750f },
		{ r2o2, r2o4, 0, r2o4, 0, 0, 0, r2o8, 0, 0 },
		{ 0, r2o4, r2o2, 0, r2o4, 0, 0, r2o8, 0, 0 },
		{ 0, 0, 0, r2o4, 0, r2o2, 0, r2o8, 0, 0 },
		{ 0, 0, 0, 0, r2o4, 0, r2o2, r2o8, 0, 0 } });
	const SpatialSoundMatrix SevenZeroTwo2M1Spatial(std::vector<std::vector<float>>
		//L, C, R, Lss, Rss, Lsr, Rsr, Lts, Rts
	{   { r2o2, r2o4, 0, r2o4, 0, 0, 0, 0.3750f, 0.1250f },
		{ 0, r2o4, r2o2, 0, r2o4, 0, 0, 0.1250f, 0.3750f },
		{ 0, 0, 0, r2o4, 0, r2o2, 0, 0.3750f, 0.1250f },
		{ 0, 0, 0, 0, r2o4, 0, r2o2, 0.1250f, 0.3750f },
		{ r2o2, r2o4, 0, r2o4, 0, 0, 0, 0, 0 },
		{ 0, r2o4, r2o2, 0, r2o4, 0, 0, 0, 0 },
		{ 0, 0, 0, r2o4, 0, r2o2, 0, 0, 0 },
		{ 0, 0, 0, 0, r2o4, 0, r2o2, 0, 0 } });
	const SpatialSoundMatrix NineOne2M1Spatial(std::vector<std::vector<float>>
	{   { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } });
	const SpatialSoundMatrix NineZero2M1Spatial(std::vector<std::vector<float>>
	{   { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 } });
	const SpatialSoundMatrix FiveOneTwo2M1Spatial(std::vector<std::vector<float>>
		//L  C  R  Ls Rs LFE Lts Rts
	{   { r2o2, r2o4, 0, 0, 0, r2o8, 0.3750f, 0.1250f },
		{ 0, r2o4, r2o2, 0, 0, r2o8, 0.1250f, 0.3750f },
		{ 0, r2o20, 0, r2o2, 0, r2o8, 0.3750f, 0.1250f },
		{ 0, r2o20, 0, 0, r2o2, r2o8, 0.1250f, 0.3750f },
		{ r2o2, r2o4, 0, 0, 0, r2o8, 0, 0 },
		{ 0, r2o4, r2o2, 0, 0, r2o8, 0, 0 },
		{ 0, r2o20, 0, r2o2, 0, r2o8, 0, 0 },
		{ 0, r2o20, 0, 0, r2o2, r2o8, 0, 0 } });
	const SpatialSoundMatrix FiveZeroTwo2M1Spatial(std::vector<std::vector<float>>
		//L  C  R  Ls Rs Lts Rts
	{   { r2o2, r2o4, 0, 0, 0, 0.3750f, 0.1250f },
		{ 0, r2o4, r2o2, 0, 0, 0.1250f, 0.3750f },
		{ 0, r2o20, 0, r2o2, 0, 0.3750f, 0.1250f },
		{ 0, r2o20, 0, 0, r2o2, 0.1250f, 0.3750f },
		{ r2o2, r2o4, 0, 0, 0, 0, 0 },
		{ 0, r2o4, r2o2, 0, 0, 0, 0 },
		{ 0, r2o20, 0, r2o2, 0, 0, 0 },
		{ 0, r2o20, 0, 0, r2o2, 0, 0 } });
	const SpatialSoundMatrix FiveOneFour2M1Spatial(std::vector<std::vector<float>>
		//L  C  R  Ls Rs LFE FLts FRts BLts BRts
	{   { r2o2, r2o4, 0, 0, 0, r2o8, 0.7280f, 0.1250f, 0.1250f, 0.0210f },
		{ 0, r2o4, r2o2, 0, 0, r2o8, 0.1250f, 0.7280f, 0.0210f, 0.1250f },
		{ 0, r2o20, 0, r2o2, 0, r2o8, 0.1250f, 0.0210f, 0.7280f, 0.1250f },
		{ 0, r2o20, 0, 0, r2o2, r2o8, 0.0210f, 0.1250f, 0.1250f, 0.7280f },
		{ r2o2, r2o4, 0, 0, 0, r2o8, 0, 0, 0, 0 },
		{ 0, r2o4, r2o2, 0, 0, r2o8, 0, 0, 0, 0 },
		{ 0, r2o20, 0, r2o2, 0, r2o8, 0, 0, 0, 0 },
		{ 0, r2o20, 0, 0, r2o2, r2o8, 0, 0, 0, 0 } });
	const SpatialSoundMatrix FiveZeroFour2M1Spatial(std::vector<std::vector<float>>
		//L  C  R  Ls Rs FLts FRts BLts BRts
	{   { r2o2, r2o4, 0, 0, 0, 0.7280f, 0.1250f, 0.1250f, 0.0210f },
		{ 0, r2o4, r2o2, 0, 0, 0.1250f, 0.7280f, 0.0210f, 0.1250f },
		{ 0, r2o20, 0, r2o2, 0, 0.1250f, 0.0210f, 0.7280f, 0.1250f },
		{ 0, r2o20, 0, 0, r2o2, 0.0210f, 0.1250f, 0.1250f, 0.7280f },
		{ r2o2, r2o4, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, r2o4, r2o2, 0, 0, 0, 0, 0, 0 },
		{ 0, r2o20, 0, r2o2, 0, 0, 0, 0, 0 },
		{ 0, r2o20, 0, 0, r2o2, 0, 0, 0, 0 } });
	const SpatialSoundMatrix SevenOneFour2M1Spatial(std::vector<std::vector<float>>
		//L, C, R, Lss, Rss, Lsr, Rsr, LFE, FLts, FRts, BLts, BRts
	{   { r2o2, r2o4, 0, r2o4, 0, 0, 0, r2o8, 0.7280f, 0.1250f, 0.1250f, 0.0210f },
		{ 0, r2o4, r2o2, 0, r2o4, 0, 0, r2o8, 0.1250f, 0.7280f, 0.0210f, 0.1250f },
		{ 0, 0, 0, r2o4, 0, r2o2, 0, r2o8, 0.1250f, 0.0210f, 0.7280f, 0.1250f },
		{ 0, 0, 0, 0, r2o4, 0, r2o2, r2o8, 0.0210f, 0.1250f, 0.1250f, 0.7280f },
		{ r2o2, r2o4, 0, r2o4, 0, 0, 0, r2o8, 0, 0, 0, 0 },
		{ 0, r2o4, r2o2, 0, r2o4, 0, 0, r2o8, 0, 0, 0, 0 },
		{ 0, 0, 0, r2o4, 0, r2o2, 0, r2o8, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, r2o4, 0, r2o2, r2o8, 0, 0, 0, 0 } });
	const SpatialSoundMatrix SevenZeroFour2M1Spatial(std::vector<std::vector<float>>
		//L, C, R, Lss, Rss, Lsr, Rsr, FLts, FRts, BLts, BRts
	{   { r2o2, r2o4, 0, r2o4, 0, 0, 0, 0.7280f, 0.1250f, 0.1250f, 0.0210f },
		{ 0, r2o4, r2o2, 0, r2o4, 0, 0, 0.1250f, 0.7280f, 0.0210f, 0.1250f },
		{ 0, 0, 0, r2o4, 0, r2o2, 0, 0.1250f, 0.0210f, 0.7280f, 0.1250f },
		{ 0, 0, 0, 0, r2o4, 0, r2o2, 0.0210f, 0.1250f, 0.1250f, 0.7280f },
		{ r2o2, r2o4, 0, r2o4, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, r2o4, r2o2, 0, r2o4, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, r2o4, 0, r2o2, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, r2o4, 0, r2o2, 0, 0, 0, 0 } });

	const SpatialSoundMatrix NineOneFour2M1Spatial(std::vector<std::vector<float>> // ?
	{
		{}
	});
	const SpatialSoundMatrix NineOneSix2M1Spatial(std::vector<std::vector<float>> // ?
	{
		{ }
	});
	const SpatialSoundMatrix M1SpatialFaces2M1Spatial(std::vector<std::vector<float>>
		// FC, LC, BC, RC, TC, BC
	{   { r2o4, r2o4, 0, 0, r2o4, 0 },
		{ r2o4, 0, 0, r2o4, r2o4, 0 },
		{ 0, r2o4, r2o4, 0, r2o4, 0 },
		{ 0, 0, r2o4, r2o4, r2o4, 0 },
		{ r2o4, r2o4, 0, 0, 0, r2o4 },
		{ r2o4, 0, 0, r2o4, 0, r2o4 },
		{ 0, r2o4, r2o4, 0, 0, r2o4 },
		{ 0, 0, r2o4, r2o4, 0, r2o4 } });

	// --- M1Spatial && M1Spatial+Stereo to Surround ---;
	//TODO: fix front to rear ratio
	const SpatialSoundMatrix M1Spatial2Stereo(std::vector<std::vector<float>>
	{   { r2o8, 0, r2o8, 0, r2o8, 0, r2o8, 0 },
		{ 0, r2o8, 0, r2o8, 0, r2o8, 0, r2o8 } });
	const SpatialSoundMatrix M1SpatialS2Stereo(std::vector<std::vector<float>>
	{   { r2o8, 0, r2o8, 0, r2o8, 0, r2o8, 0, 1, 0 },
		{ 0, r2o8, 0, r2o8, 0, r2o8, 0, r2o8, 0, 1 } });

	const SpatialSoundMatrix M1Spatial2Stereo_Cinema(std::vector<std::vector<float>>
	{   { r2o8, 0, r2o8, 0, r2o8, 0, r2o8, 0 },
		{ 0, r2o8, 0, r2o8, 0, r2o8, 0, r2o8 } });
	const SpatialSoundMatrix M1SpatialS2Stereo_Cinema(std::vector<std::vector<float>>
	{   { r2o8, 0, r2o8, 0, r2o8, 0, r2o8, 0, 1, 0 },
		{ 0, r2o8, 0, r2o8, 0, r2o8, 0, r2o8, 0, 1 } });

	const SpatialSoundMatrix M1Spatial2FiveOh(std::vector<std::vector<float>>
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2 } });
	const SpatialSoundMatrix M1SpatialS2FiveOh(std::vector<std::vector<float>>
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1, 0 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0 } });

	const SpatialSoundMatrix M1Spatial2FiveOneFilm(std::vector<std::vector<float>>
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8 } });
	const SpatialSoundMatrix M1SpatialS2FiveOneFilm(std::vector<std::vector<float>>
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1, 0 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o2, r2o2 } });

	const SpatialSoundMatrix M1Spatial2FiveOneFilm_Cinema(std::vector<std::vector<float>>
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8 } });
	const SpatialSoundMatrix M1SpatialS2FiveOneFilm_Cinema(std::vector<std::vector<float>>
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1, 0 },
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o2, r2o2 } });

	const SpatialSoundMatrix M1Spatial2FiveOneSmpte(std::vector<std::vector<float>>
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2 } });
	const SpatialSoundMatrix M1SpatialS2FiveOneSmpte(std::vector<std::vector<float>>
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1 },
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0, 0, 0 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o2, r2o2 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0 } });

	const SpatialSoundMatrix M1Spatial2FiveOneDts(std::vector<std::vector<float>>
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2 },
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8 } });
	const SpatialSoundMatrix M1SpatialS2FiveOneDts(std::vector<std::vector<float>>
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0, 0, 0 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o2, r2o2 } });

	const SpatialSoundMatrix M1Spatial2SevenOnePt(std::vector<std::vector<float>>
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0 },
		{ 0, r2o4, 0, r2o4, 0, r2o4, 0, r2o4 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8 } });
	const SpatialSoundMatrix M1SpatialS2SevenOnePt(std::vector<std::vector<float>>
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1, 0 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1 },
		{ r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0, 0, 0 },
		{ 0, r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0, 0 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o2, r2o2 } });

	const SpatialSoundMatrix M1Spatial2SevenOnePt_Cinema(std::vector<std::vector<float>>
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0 },
		{ 0, r2o4, 0, r2o4, 0, r2o4, 0, r2o4 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8 } });
	const SpatialSoundMatrix M1SpatialS2SevenOnePt_Cinema(std::vector<std::vector<float>>
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1, 0 },
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1 },
		{ r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0, 0, 0 },
		{ 0, r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0, 0 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o2, r2o2 } });

	const SpatialSoundMatrix M1Spatial2SevenZero_Cinema(std::vector<std::vector<float>>
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0 },
		{ 0, r2o4, 0, r2o4, 0, r2o4, 0, r2o4 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2 } });
	const SpatialSoundMatrix M1SpatialS2SevenZero_Cinema(std::vector<std::vector<float>>
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1, 0 },
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1 },
		{ r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0, 0, 0 },
		{ 0, r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0, 0 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0 } });

	const SpatialSoundMatrix M1Spatial2SevenOneSDDS(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0 }, //L
		{ 0.375f, 0.125f, 0, 0, 0.375f, 0.125f, 0, 0 }, //Lc
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0 }, //C
		{ 0.125f, 0.375f, 0, 0, 0.125f, 0.375f, 0, 0 }, //Rc
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0 }, //R
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0 }, //Ls
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2 }, //Rs
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8 } }); //LFE
	const SpatialSoundMatrix M1SpatialS2SevenOneSDDS(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0 }, //L
		{ 0.375f, 0.125f, 0, 0, 0.375f, 0.125f, 0, 0, r2o2, 0 }, //Lc
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0, 0, 0 }, //C
		{ 0.125f, 0.375f, 0, 0, 0.125f, 0.375f, 0, 0, 0, r2o2 }, //Rc
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0, r2o2 }, //R
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0 }, //Ls
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0 }, //Rs
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o2, r2o2 } }); //LFE

	const SpatialSoundMatrix M1Spatial2SevenZeroSDDS(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0 }, //L
		{ 0.375f, 0.125f, 0, 0, 0.375f, 0.125f, 0, 0 }, //Lc
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0 }, //C
		{ 0.125f, 0.375f, 0, 0, 0.125f, 0.375f, 0, 0 }, //Rc
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0 }, //R
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0 }, //Ls
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2 } }); //Rs
	const SpatialSoundMatrix M1SpatialS2SevenZeroSDDS(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8  9  10
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0 }, //L
		{ 0.375f, 0.125f, 0, 0, 0.375f, 0.125f, 0, 0, r2o2, 0 }, //Lc
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0, 0, 0 }, //C
		{ 0.125f, 0.375f, 0, 0, 0.125f, 0.375f, 0, 0, 0, r2o2 }, //Rc
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0, r2o2 }, //R
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0 }, //Ls
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0 } }); //Rs

	const SpatialSoundMatrix M1Spatial2SevenOneTwo(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0 },//L
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8 },//C
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0 },//R
		{ r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0 },//Lss
		{ 0, r2o4, 0, r2o4, 0, r2o4, 0, r2o4 },//Rss
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0 },//Lsr
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2 },//Rsr
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8 },//LFE
		{ r2o2, 0, r2o2, 0, 0, 0, 0, 0 },//Lts
		{ 0, r2o2, 0, r2o2, 0, 0, 0, 0 } });//Rts
	const SpatialSoundMatrix M1SpatialS2SevenOneTwo(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8  9  10
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1, 0 },//L
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, 0, 0 },//C
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1 },//R
		{ r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0, 0, 0 },//Lss
		{ 0, r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0, 0 },//Rss
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0 },//Lsr
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0 },//Rsr
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o2, r2o2 },//LFE
		{ r2o2, 0, r2o2, 0, 0, 0, 0, 0, 0, 0 },//Lts
		{ 0, r2o2, 0, r2o2, 0, 0, 0, 0, 0, 0 } });//Rts

	const SpatialSoundMatrix M1Spatial2SevenZeroTwo(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0 },//L
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8 },//C
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0 },//R
		{ r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0 },//Lss
		{ 0, r2o4, 0, r2o4, 0, r2o4, 0, r2o4 },//Rss
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0 },//Lsr
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2 },//Rsr
		{ r2o2, 0, r2o2, 0, 0, 0, 0, 0 },//Lts
		{ 0, r2o2, 0, r2o2, 0, 0, 0, 0 } });//Rts
	const SpatialSoundMatrix M1SpatialS2SevenZeroTwo(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8  9  10
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1, 0 },//L
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, 0, 0 },//C
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1 },//R
		{ r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0, 0, 0 },//Lss
		{ 0, r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0, 0 },//Rss
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0 },//Lsr
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0 },//Rsr
		{ r2o2, 0, r2o2, 0, 0, 0, 0, 0, 0, 0 },//Lts
		{ 0, r2o2, 0, r2o2, 0, 0, 0, 0, 0, 0 } });//Rts

	const SpatialSoundMatrix M1Spatial2NineOne(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 } });
	const SpatialSoundMatrix M1SpatialS2NineOne(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8  9  10
	{   { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } });

	const SpatialSoundMatrix M1Spatial2NineZero(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 } });
	const SpatialSoundMatrix M1SpatialS2NineZero(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8  9  10
	{   { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } });

	const SpatialSoundMatrix M1Spatial2FiveOneTwo(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8 },
		{ r2o2, 0, r2o2, 0, 0, 0, 0, 0 },//Lts
		{ 0, r2o2, 0, r2o2, 0, 0, 0, 0 } });//Rts
	const SpatialSoundMatrix M1SpatialS2FiveOneTwo(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1, 0 },
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o2, r2o2 },
		{ r2o2, 0, r2o2, 0, 0, 0, 0, 0, 0, 0 },//Lts
		{ 0, r2o2, 0, r2o2, 0, 0, 0, 0, 0, 0 } });//Rts

	const SpatialSoundMatrix M1Spatial2FiveZeroTwo(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2 },
		{ r2o2, 0, r2o2, 0, 0, 0, 0, 0 },//Lts
		{ 0, r2o2, 0, r2o2, 0, 0, 0, 0 } });//Rts
	const SpatialSoundMatrix M1SpatialS2FiveZeroTwo(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1, 0 },
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ r2o2, 0, r2o2, 0, 0, 0, 0, 0, 0, 0 },//Lts
		{ 0, r2o2, 0, r2o2, 0, 0, 0, 0, 0, 0 } });//Rts

	const SpatialSoundMatrix M1Spatial2FiveOneFour(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8 },
		{ 0.7280f, 0.1250f, 0.1250f, 0.0210f, 0, 0, 0, 0 },//FLts
		{ 0.1250f, 0.7280f, 0.0210f, 0.1250f, 0, 0, 0, 0 },//FRts
		{ 0.1250f, 0.0210f, 0.7280f, 0.1250f, 0, 0, 0, 0 },//BLts
		{ 0.0210f, 0.1250f, 0.1250f, 0.7280f, 0, 0, 0, 0 } });//BRts
	const SpatialSoundMatrix M1SpatialS2FiveOneFour(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1, 0 },
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o2, r2o2 },
		{ 0.7280f, 0.1250f, 0.1250f, 0.0210f, 0, 0, 0, 0, 0, 0 },//FLts
		{ 0.1250f, 0.7280f, 0.0210f, 0.1250f, 0, 0, 0, 0, 0, 0 },//FRts
		{ 0.1250f, 0.0210f, 0.7280f, 0.1250f, 0, 0, 0, 0, 0, 0 },//BLts
		{ 0.0210f, 0.1250f, 0.1250f, 0.7280f, 0, 0, 0, 0, 0, 0 } });//BRts

	const SpatialSoundMatrix M1Spatial2FiveZeroFour(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2 },
		{ 0.7280f, 0.1250f, 0.1250f, 0.0210f, 0, 0, 0, 0 },//FLts
		{ 0.1250f, 0.7280f, 0.0210f, 0.1250f, 0, 0, 0, 0 },//FRts
		{ 0.1250f, 0.0210f, 0.7280f, 0.1250f, 0, 0, 0, 0 },//BLts
		{ 0.0210f, 0.1250f, 0.1250f, 0.7280f, 0, 0, 0, 0 } });//BRts
	const SpatialSoundMatrix M1SpatialS2FiveZeroFour(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1, 0 },
		{ r2o4, r2o4, 0, 0, r2o4, r2o4, 0, 0, 0, 0 },
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1 },
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0 },
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0 },
		{ 0.7280f, 0.1250f, 0.1250f, 0.0210f, 0, 0, 0, 0, 0, 0 },//FLts
		{ 0.1250f, 0.7280f, 0.0210f, 0.1250f, 0, 0, 0, 0, 0, 0 },//FRts
		{ 0.1250f, 0.0210f, 0.7280f, 0.1250f, 0, 0, 0, 0, 0, 0 },//BLts
		{ 0.0210f, 0.1250f, 0.1250f, 0.7280f, 0, 0, 0, 0, 0, 0 } });//BRts

	const SpatialSoundMatrix M1Spatial2SevenOneFour(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0 },//L
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8 },//C
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0 },//R
		{ r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0 },//Lss
		{ 0, r2o4, 0, r2o4, 0, r2o4, 0, r2o4 },//Rss
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0 },//Lsr
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2 },//Rsr
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8 },//LFE
		{ 0.7280f, 0.1250f, 0.1250f, 0.0210f, 0, 0, 0, 0 },//FLts
		{ 0.1250f, 0.7280f, 0.0210f, 0.1250f, 0, 0, 0, 0 },//FRts
		{ 0.1250f, 0.0210f, 0.7280f, 0.1250f, 0, 0, 0, 0 },//BLts
		{ 0.0210f, 0.1250f, 0.1250f, 0.7280f, 0, 0, 0, 0 } });//BRts
	const SpatialSoundMatrix M1SpatialS2SevenOneFour(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1, 0 },//L
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, 0, 0 },//C
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1 },//R
		{ r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0, 0, 0 },//Lss
		{ 0, r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0, 0 },//Rss
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0 },//Lsr
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0 },//Rsr
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o2, r2o2 },//LFE
		{ 0.7280f, 0.1250f, 0.1250f, 0.0210f, 0, 0, 0, 0, 0, 0 },//FLts
		{ 0.1250f, 0.7280f, 0.0210f, 0.1250f, 0, 0, 0, 0, 0, 0 },//FRts
		{ 0.1250f, 0.0210f, 0.7280f, 0.1250f, 0, 0, 0, 0, 0, 0 },//BLts
		{ 0.0210f, 0.1250f, 0.1250f, 0.7280f, 0, 0, 0, 0, 0, 0 } });//BRts

	const SpatialSoundMatrix M1Spatial2SevenZeroFour(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0 },//L
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8 },//C
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0 },//R
		{ r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0 },//Lss
		{ 0, r2o4, 0, r2o4, 0, r2o4, 0, r2o4 },//Rss
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0 },//Lsr
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2 },//Rsr
		{ 0.7280f, 0.1250f, 0.1250f, 0.0210f, 0, 0, 0, 0 },//FLts
		{ 0.1250f, 0.7280f, 0.0210f, 0.1250f, 0, 0, 0, 0 },//FRts
		{ 0.1250f, 0.0210f, 0.7280f, 0.1250f, 0, 0, 0, 0 },//BLts
		{ 0.0210f, 0.1250f, 0.1250f, 0.7280f, 0, 0, 0, 0 } });//BRts
	const SpatialSoundMatrix M1SpatialS2SevenZeroFour(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1, 0 },//L
		{ r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, r2o8, 0, 0 },//C
		{ 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0, 1 },//R
		{ r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0, 0, 0 },//Lss
		{ 0, r2o4, 0, r2o4, 0, r2o4, 0, r2o4, 0, 0 },//Rss
		{ 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0, 0 },//Lsr
		{ 0, 0, 0, r2o2, 0, 0, 0, r2o2, 0, 0 },//Rsr
		{ 0.7280f, 0.1250f, 0.1250f, 0.0210f, 0, 0, 0, 0, 0, 0 },//FLts
		{ 0.1250f, 0.7280f, 0.0210f, 0.1250f, 0, 0, 0, 0, 0, 0 },//FRts
		{ 0.1250f, 0.0210f, 0.7280f, 0.1250f, 0, 0, 0, 0, 0, 0 },//BLts
		{ 0.0210f, 0.1250f, 0.1250f, 0.7280f, 0, 0, 0, 0, 0, 0 } });//BRts

	const SpatialSoundMatrix M1Spatial2NineOneFour(std::vector<std::vector<float>> // ?
		//1  2  3  4  5  6  7  8
	{   { 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 } });
	const SpatialSoundMatrix M1SpatialS2NineOneFour(std::vector<std::vector<float>> // ?
		//1  2  3  4  5  6  7  8
	{   { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } });

	const SpatialSoundMatrix M1Spatial2NineOneSix(std::vector<std::vector<float>> // ?
		//1  2  3  4  5  6  7  8
	{   { 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0 } });
	const SpatialSoundMatrix M1SpatialS2NineOneSix(std::vector<std::vector<float>> // ?
		//1  2  3  4  5  6  7  8
	{   { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } });

	const SpatialSoundMatrix M1Spatial2MarcoSixteen(std::vector<std::vector<float>>
		//1  2  3  4  5  6  7  8
	{   { oor8, 0, 0, 0, oor8, 0, 0, 0 }, //mid -45
		{ oor16, oor16, 0, 0, oor16, oor16, 0, 0 }, //mid 0
		{ 0, oor8, 0, 0, 0, oor8, 0, 0 }, //mid 45
		{ 0, oor16, 0, oor16, 0, oor16, 0, oor16 }, //mid 90
		{ 0, 0, 0, oor8, 0, 0, 0, oor8 }, //mid 135
		{ 0, 0, oor16, oor16, 0, 0, oor16, oor16 }, //mid 180
		{ 0, 0, oor8, 0, 0, 0, oor8, 0 }, //mid -135
		{ oor16, 0, oor16, 0, oor16, 0, oor16, 0 }, //mid -90
		{ oor4, 0, 0, 0, 0, 0, 0, 0 }, //top -45
		{ 0, oor4, 0, 0, 0, 0, 0, 0 }, //top 45
		{ 0, 0, 0, oor4, 0, 0, 0, 0 }, //top 135
		{ 0, 0, oor4, 0, 0, 0, 0, 0 }, //top -135
		{ 0, 0, 0, 0, oor4, 0, 0, 0 }, //bottom -45
		{ 0, 0, 0, 0, 0, oor4, 0, 0 }, //bottom 45
		{ 0, 0, 0, 0, 0, 0, 0, oor4 }, //bottom 135
		{ 0, 0, 0, 0, 0, 0, oor4, 0 } }); //bottom -135
};

namespace Mach1TranscodeFormats {

	const enum FormatType {
		Empty = 0,
		FuMa,
		ACNSN3D,
		M1Horizon,
		M1HorizonS,
		M1HorizonPairs,
		M1Spatial,
		M1SpatialS,
		M1SpatialPairs,
		M1SpatialPlusDef,
		M1SpatialPlusPlusDef,
		M1SpatialExtendedDef,
		M1SpatialExtendedPlusDef,
		Mono, //
		Stereo,
		LCR,
		FiveOh,
		FiveOneFilm,
		FiveOneFilm_Cinema,
		FiveOneSmpte,
		FiveOneDts,
		SixOh,
		SevenOnePt,
		SevenOnePt_Cinema,
		ACNSN3DO2A,
		FuMaO2A,
		TBE,
		ACNSN3DO3A,
		FuMaO3A,
		SevenOneSDDS,
		SevenZeroSDDS,
		SevenOneTwo,
		SevenZeroTwo,
		NineOne,
		NineZero,
		Stereo_Cinema,
		FiveOneTwo,
		FiveZeroTwo,
		FiveOneFour,
		FiveZeroFour,
		SevenOneFour,
		SevenZeroFour,
		SevenZero_Cinema,
		M1SpatialFaces,
		NineOneFour,
		NineOneSix,
		MarcoSixteen,
		TTPoints,
        ACNSN3DmaxRE1oa,
        ACNSN3DmaxRE2oa,
        ACNSN3DmaxRE3oa,
        ACNSN3DmaxRE4oa,
        ACNSN3DmaxRE5oa,
        ACNSN3DmaxRE6oa,
        ACNSN3DmaxRE7oa,
	};
};


namespace Mach1TranscodeConstants {

	const std::map<Mach1TranscodeFormats::FormatType, char*> FormatNames = {
		{ Mach1TranscodeFormats::Empty, "None" },
		{ Mach1TranscodeFormats::FuMa, "FuMa" },
		{ Mach1TranscodeFormats::ACNSN3D, "ACNSN3D" },
		{ Mach1TranscodeFormats::M1Horizon, "M1Horizon" },
		{ Mach1TranscodeFormats::M1HorizonS, "M1HorizonS" },
		{ Mach1TranscodeFormats::M1HorizonPairs, "M1HorizonPairs" },
		{ Mach1TranscodeFormats::M1Spatial, "M1Spatial" },
		{ Mach1TranscodeFormats::M1SpatialS, "M1SpatialS" },
		{ Mach1TranscodeFormats::M1SpatialPairs, "M1SpatialPairs" },
		{ Mach1TranscodeFormats::M1SpatialPlusDef, "M1SpatialPlusDef" },
		{ Mach1TranscodeFormats::M1SpatialPlusPlusDef, "M1SpatialPlusPlusDef" },
		{ Mach1TranscodeFormats::M1SpatialExtendedDef, "M1SpatialExtendedDef" },
		{ Mach1TranscodeFormats::M1SpatialExtendedPlusDef, "M1SpatialExtendedPlusDef" },
		{ Mach1TranscodeFormats::Mono, "Mono" },
		{ Mach1TranscodeFormats::Stereo, "Stereo" },
		{ Mach1TranscodeFormats::LCR, "LCR" },
		{ Mach1TranscodeFormats::FiveOh, "FiveOh" },
		{ Mach1TranscodeFormats::FiveOneFilm, "FiveOneFilm" },
		{ Mach1TranscodeFormats::FiveOneFilm_Cinema, "FiveOneFilm_Cinema" },
		{ Mach1TranscodeFormats::FiveOneSmpte, "FiveOneSmpte" },
		{ Mach1TranscodeFormats::FiveOneDts, "FiveOneDts" },
		{ Mach1TranscodeFormats::SixOh, "SixOh" },
		{ Mach1TranscodeFormats::SevenOnePt, "SevenOnePt" },
		{ Mach1TranscodeFormats::SevenOnePt_Cinema, "SevenOnePt_Cinema" },
		{ Mach1TranscodeFormats::ACNSN3DO2A, "ACNSN3DO2A" },
		{ Mach1TranscodeFormats::FuMaO2A, "FuMaO2A" },
		{ Mach1TranscodeFormats::TBE, "TBE" },
		{ Mach1TranscodeFormats::ACNSN3DO3A, "ACNSN3DO3A" },
		{ Mach1TranscodeFormats::FuMaO3A, "FuMaO3A" },
		{ Mach1TranscodeFormats::SevenOneSDDS, "SevenOneSDDS" },
		{ Mach1TranscodeFormats::SevenZeroSDDS, "SevenZeroSDDS" },
		{ Mach1TranscodeFormats::SevenOneTwo, "SevenOneTwo" },
		{ Mach1TranscodeFormats::SevenZeroTwo, "SevenZeroTwo" },
		{ Mach1TranscodeFormats::NineOne, "NineOne" },
		{ Mach1TranscodeFormats::NineZero, "NineZero" },
		{ Mach1TranscodeFormats::Stereo_Cinema, "Stereo_Cinema" },
		{ Mach1TranscodeFormats::FiveOneTwo, "FiveOneTwo" },
		{ Mach1TranscodeFormats::FiveZeroTwo, "FiveZeroTwo" },
		{ Mach1TranscodeFormats::FiveOneFour, "FiveOneFour" },
		{ Mach1TranscodeFormats::FiveZeroFour, "FiveZeroFour" },
		{ Mach1TranscodeFormats::SevenOneFour, "SevenOneFour" },
		{ Mach1TranscodeFormats::SevenZeroFour, "SevenZeroFour" },
		{ Mach1TranscodeFormats::SevenZero_Cinema, "SevenZero_Cinema" },
		{ Mach1TranscodeFormats::M1SpatialFaces, "M1SpatialFaces" },
		{ Mach1TranscodeFormats::NineOneFour, "NineOneFour" },
		{ Mach1TranscodeFormats::NineOneSix, "NineOneSix" },
		{ Mach1TranscodeFormats::MarcoSixteen, "MarcoSixteen" },
		{ Mach1TranscodeFormats::TTPoints, "TTPoints" },
        { Mach1TranscodeFormats::ACNSN3DmaxRE1oa, "ACNSN3DmaxRE1oa" },
        { Mach1TranscodeFormats::ACNSN3DmaxRE2oa, "ACNSN3DmaxRE2oa" },
        { Mach1TranscodeFormats::ACNSN3DmaxRE3oa, "ACNSN3DmaxRE3oa" },
        { Mach1TranscodeFormats::ACNSN3DmaxRE4oa, "ACNSN3DmaxRE4oa" },
        { Mach1TranscodeFormats::ACNSN3DmaxRE5oa, "ACNSN3DmaxRE5oa" },
        { Mach1TranscodeFormats::ACNSN3DmaxRE6oa, "ACNSN3DmaxRE6oa" },
        { Mach1TranscodeFormats::ACNSN3DmaxRE7oa, "ACNSN3DmaxRE7oa" }
	};

	const std::map<Mach1TranscodeFormats::FormatType, int> FormatChannels = {
		{ Mach1TranscodeFormats::Empty, 0 },
		{ Mach1TranscodeFormats::FuMa, 4 },
		{ Mach1TranscodeFormats::ACNSN3D, 4 },
		{ Mach1TranscodeFormats::M1Horizon, 4 },
		{ Mach1TranscodeFormats::M1HorizonS, 6 },
		{ Mach1TranscodeFormats::M1HorizonPairs, 8 },
		{ Mach1TranscodeFormats::M1Spatial, 8 },
		{ Mach1TranscodeFormats::M1SpatialS, 10 },
		{ Mach1TranscodeFormats::M1SpatialPairs, 16 },
		{ Mach1TranscodeFormats::M1SpatialPlusDef, 12 },
		{ Mach1TranscodeFormats::M1SpatialPlusPlusDef, 14 },
		{ Mach1TranscodeFormats::M1SpatialExtendedDef, 16 },
		{ Mach1TranscodeFormats::M1SpatialExtendedPlusDef, 18 },
		{ Mach1TranscodeFormats::Mono, 1 },
		{ Mach1TranscodeFormats::Stereo, 2 },
		{ Mach1TranscodeFormats::LCR, 3 },
		{ Mach1TranscodeFormats::FiveOh, 5 },
		{ Mach1TranscodeFormats::FiveOneFilm, 6 },
		{ Mach1TranscodeFormats::FiveOneFilm_Cinema, 6 },
		{ Mach1TranscodeFormats::FiveOneSmpte, 6 },
		{ Mach1TranscodeFormats::FiveOneDts, 6 },
		{ Mach1TranscodeFormats::SixOh, 6 },
		{ Mach1TranscodeFormats::SevenOnePt, 8 },
		{ Mach1TranscodeFormats::SevenOnePt_Cinema, 8 },
		{ Mach1TranscodeFormats::ACNSN3DO2A, 9 },
		{ Mach1TranscodeFormats::FuMaO2A, 9 },
		{ Mach1TranscodeFormats::TBE, 8 },
		{ Mach1TranscodeFormats::ACNSN3DO3A, 16 },
		{ Mach1TranscodeFormats::FuMaO3A, 16 },
		{ Mach1TranscodeFormats::SevenOneSDDS, 8 },
		{ Mach1TranscodeFormats::SevenZeroSDDS, 7 },
		{ Mach1TranscodeFormats::SevenOneTwo, 10 },
		{ Mach1TranscodeFormats::SevenZeroTwo, 9 },
		{ Mach1TranscodeFormats::NineOne, 10 },
		{ Mach1TranscodeFormats::NineZero, 9 },
		{ Mach1TranscodeFormats::Stereo_Cinema, 2 },
		{ Mach1TranscodeFormats::FiveOneTwo, 8 },
		{ Mach1TranscodeFormats::FiveZeroTwo, 7 },
		{ Mach1TranscodeFormats::FiveOneFour, 10 },
		{ Mach1TranscodeFormats::FiveZeroFour, 9 },
		{ Mach1TranscodeFormats::SevenOneFour, 12 },
		{ Mach1TranscodeFormats::SevenZeroFour, 11 },
		{ Mach1TranscodeFormats::SevenZero_Cinema, 7 },
		{ Mach1TranscodeFormats::M1SpatialFaces, 6 },
		{ Mach1TranscodeFormats::NineOneFour, 14 },
		{ Mach1TranscodeFormats::NineOneSix, 16 },
		{ Mach1TranscodeFormats::MarcoSixteen, 16 },
        { Mach1TranscodeFormats::ACNSN3DmaxRE1oa, 4 },
        { Mach1TranscodeFormats::ACNSN3DmaxRE2oa, 9 },
        { Mach1TranscodeFormats::ACNSN3DmaxRE3oa, 16 },
        { Mach1TranscodeFormats::ACNSN3DmaxRE4oa, 25 },
        { Mach1TranscodeFormats::ACNSN3DmaxRE5oa, 36 },
        { Mach1TranscodeFormats::ACNSN3DmaxRE6oa, 49 },
        { Mach1TranscodeFormats::ACNSN3DmaxRE7oa, 64 },
	};

	const int MAXCHANS = 64;
	const int NUMFMTS = 55;

	const std::map<std::pair<Mach1TranscodeFormats::FormatType, Mach1TranscodeFormats::FormatType>, const SpatialSoundMatrix*> FormatMatrix = {
		{std::make_pair(Mach1TranscodeFormats::FuMa, Mach1TranscodeFormats::ACNSN3D), &Mach1TranscodeConstantsInternal::FuMa2ACNSN3D},
		{std::make_pair(Mach1TranscodeFormats::FuMaO2A, Mach1TranscodeFormats::ACNSN3DO2A), &Mach1TranscodeConstantsInternal::FuMaO2A2ACNSN3DO2A},
		{std::make_pair(Mach1TranscodeFormats::FuMaO3A, Mach1TranscodeFormats::ACNSN3DO3A), &Mach1TranscodeConstantsInternal::FuMaO3A2ACNSN3DO3A},
		{std::make_pair(Mach1TranscodeFormats::ACNSN3D, Mach1TranscodeFormats::FuMa), &Mach1TranscodeConstantsInternal::ACNSN3D2FuMa},
		{std::make_pair(Mach1TranscodeFormats::ACNSN3DO2A, Mach1TranscodeFormats::FuMaO2A), &Mach1TranscodeConstantsInternal::ACNSN3DO2A2FuMaO2A},
		{std::make_pair(Mach1TranscodeFormats::ACNSN3DO3A, Mach1TranscodeFormats::FuMaO3A), &Mach1TranscodeConstantsInternal::ACNSN3DO3A2FuMaO3A},
		{std::make_pair(Mach1TranscodeFormats::M1Horizon, Mach1TranscodeFormats::FuMa), &Mach1TranscodeConstantsInternal::M1Horizon2FuMa},
		{std::make_pair(Mach1TranscodeFormats::M1Horizon, Mach1TranscodeFormats::ACNSN3D), &Mach1TranscodeConstantsInternal::M1Horizon2ACNSN3D},
		{std::make_pair(Mach1TranscodeFormats::M1Horizon, Mach1TranscodeFormats::ACNSN3DO2A), &Mach1TranscodeConstantsInternal::M1Horizon2ACNSN3DO2A},
		{std::make_pair(Mach1TranscodeFormats::M1Horizon, Mach1TranscodeFormats::ACNSN3DO3A), &Mach1TranscodeConstantsInternal::M1Horizon2ACNSN3DO3A},
		{std::make_pair(Mach1TranscodeFormats::ACNSN3D, Mach1TranscodeFormats::M1Horizon), &Mach1TranscodeConstantsInternal::ACNSN3D2M1Horizon},
		{std::make_pair(Mach1TranscodeFormats::ACNSN3DO2A, Mach1TranscodeFormats::M1Horizon), &Mach1TranscodeConstantsInternal::ACNSN3DO2A2M1Horizon},
		{std::make_pair(Mach1TranscodeFormats::ACNSN3DO3A, Mach1TranscodeFormats::M1Horizon), &Mach1TranscodeConstantsInternal::ACNSN3DO3A2M1Horizon},
		{std::make_pair(Mach1TranscodeFormats::M1Horizon, Mach1TranscodeFormats::M1HorizonPairs), &Mach1TranscodeConstantsInternal::M1Horizon2M1HorizonPairs},
		{std::make_pair(Mach1TranscodeFormats::M1Horizon, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::M1Horizon2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::M1Horizon, Mach1TranscodeFormats::M1SpatialPairs), &Mach1TranscodeConstantsInternal::M1Horizon2M1SpatialPairs},
		{std::make_pair(Mach1TranscodeFormats::M1Horizon, Mach1TranscodeFormats::FiveOh), &Mach1TranscodeConstantsInternal::M1Horizon2FiveOh},
		{std::make_pair(Mach1TranscodeFormats::M1Horizon, Mach1TranscodeFormats::FiveOneFilm), &Mach1TranscodeConstantsInternal::M1Horizon2FiveOneFilm},
		{std::make_pair(Mach1TranscodeFormats::M1Horizon, Mach1TranscodeFormats::FiveOneFilm_Cinema), &Mach1TranscodeConstantsInternal::M1Horizon2FiveOneFilm_Cinema},
		{std::make_pair(Mach1TranscodeFormats::M1Horizon, Mach1TranscodeFormats::FiveOneSmpte), &Mach1TranscodeConstantsInternal::M1Horizon2FiveOneSmpte},
		{std::make_pair(Mach1TranscodeFormats::M1Horizon, Mach1TranscodeFormats::FiveOneDts), &Mach1TranscodeConstantsInternal::M1Horizon2FiveOneDts},
		{std::make_pair(Mach1TranscodeFormats::M1Horizon, Mach1TranscodeFormats::SixOh), &Mach1TranscodeConstantsInternal::M1Horizon2SixOh},
		{std::make_pair(Mach1TranscodeFormats::FiveOh, Mach1TranscodeFormats::M1Horizon), &Mach1TranscodeConstantsInternal::FiveOh2M1Horizon},
		{std::make_pair(Mach1TranscodeFormats::FiveOneFilm, Mach1TranscodeFormats::M1Horizon), &Mach1TranscodeConstantsInternal::FiveOneFilm2M1Horizon},
		{std::make_pair(Mach1TranscodeFormats::FiveOneFilm_Cinema, Mach1TranscodeFormats::M1Horizon), &Mach1TranscodeConstantsInternal::FiveOneFilm_Cinema2M1Horizon},
		{std::make_pair(Mach1TranscodeFormats::FiveOneSmpte, Mach1TranscodeFormats::M1Horizon), &Mach1TranscodeConstantsInternal::FiveOneSmpte2M1Horizon},
		{std::make_pair(Mach1TranscodeFormats::FiveOneDts, Mach1TranscodeFormats::M1Horizon), &Mach1TranscodeConstantsInternal::FiveOneDts2M1Horizon},
		{std::make_pair(Mach1TranscodeFormats::SixOh, Mach1TranscodeFormats::M1Horizon), &Mach1TranscodeConstantsInternal::SixOh2M1Horizon},
		{std::make_pair(Mach1TranscodeFormats::M1HorizonS, Mach1TranscodeFormats::FuMa), &Mach1TranscodeConstantsInternal::M1HorizonS2FuMa},
		{std::make_pair(Mach1TranscodeFormats::M1HorizonS, Mach1TranscodeFormats::ACNSN3D), &Mach1TranscodeConstantsInternal::M1HorizonS2ACNSN3D},
		{std::make_pair(Mach1TranscodeFormats::M1HorizonS, Mach1TranscodeFormats::M1Horizon), &Mach1TranscodeConstantsInternal::M1HorizonS2M1Horizon},
		{std::make_pair(Mach1TranscodeFormats::M1HorizonS, Mach1TranscodeFormats::M1HorizonPairs), &Mach1TranscodeConstantsInternal::M1HorizonS2M1HorizonPairs},
		{std::make_pair(Mach1TranscodeFormats::M1HorizonS, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::M1HorizonS2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::M1HorizonS, Mach1TranscodeFormats::M1SpatialPairs), &Mach1TranscodeConstantsInternal::M1HorizonS2M1SpatialPairs},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::M1Spatial2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::FuMa), &Mach1TranscodeConstantsInternal::M1Spatial2FuMa},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::FuMaO2A), &Mach1TranscodeConstantsInternal::M1Spatial2FuMaO2A},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::TBE), &Mach1TranscodeConstantsInternal::M1Spatial2TBE},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::ACNSN3D), &Mach1TranscodeConstantsInternal::M1Spatial2ACNSN3D},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::ACNSN3DO2A), &Mach1TranscodeConstantsInternal::M1Spatial2ACNSN3DO2A},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::ACNSN3DO3A), &Mach1TranscodeConstantsInternal::M1Spatial2ACNSN3DO3A},
		{std::make_pair(Mach1TranscodeFormats::ACNSN3D, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::ACNSN3D2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::ACNSN3DO2A, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::ACNSN3DO2A2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::ACNSN3DO3A, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::ACNSN3DO3A2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::TBE, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::TBE2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::M1Horizon), &Mach1TranscodeConstantsInternal::M1Spatial2M1Horizon},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::M1HorizonPairs), &Mach1TranscodeConstantsInternal::M1Spatial2M1HorizonPairs},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::M1SpatialFaces), &Mach1TranscodeConstantsInternal::M1Spatial2M1SpatialFaces},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::M1SpatialPairs), &Mach1TranscodeConstantsInternal::M1Spatial2M1SpatialPairs},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::FuMa), &Mach1TranscodeConstantsInternal::M1SpatialS2FuMa},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::ACNSN3D), &Mach1TranscodeConstantsInternal::M1SpatialS2ACNSN3D},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::M1Horizon), &Mach1TranscodeConstantsInternal::M1SpatialS2M1Horizon},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::M1HorizonPairs), &Mach1TranscodeConstantsInternal::M1SpatialS2M1HorizonPairs},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::M1SpatialS2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::M1SpatialPairs), &Mach1TranscodeConstantsInternal::M1SpatialS2M1SpatialPairs},
		{std::make_pair(Mach1TranscodeFormats::Mono, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::Mono2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::Stereo, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::Stereo2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::Stereo_Cinema, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::Stereo_Cinema2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::LCR, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::LCR2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::FiveOh, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::FiveOh2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::FiveOneFilm, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::FiveOneFilm2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::FiveOneFilm_Cinema, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::FiveOneFilm_Cinema2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::FiveOneSmpte, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::FiveOneSmpte2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::FiveOneDts, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::FiveOneDts2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::SixOh, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::SixOh2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::SevenOnePt, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::SevenOnePt2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::SevenOnePt_Cinema, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::SevenOnePt_Cinema2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::SevenZero_Cinema, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::SevenZero_Cinema2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::SevenOneSDDS, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::SevenOneSDDS2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::SevenZeroSDDS, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::SevenZeroSDDS2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::SevenOneTwo, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::SevenOneTwo2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::SevenZeroTwo, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::SevenZeroTwo2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::NineOne, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::NineOne2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::NineZero, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::NineZero2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::FiveOneTwo, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::FiveOneTwo2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::FiveZeroTwo, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::FiveZeroTwo2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::FiveOneFour, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::FiveOneFour2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::FiveZeroFour, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::FiveZeroFour2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::SevenOneFour, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::SevenOneFour2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::SevenZeroFour, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::SevenZeroFour2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::NineOneFour, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::NineOneFour2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::NineOneSix, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::NineOneSix2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialFaces, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::M1SpatialFaces2M1Spatial},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::Stereo), &Mach1TranscodeConstantsInternal::M1Spatial2Stereo},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::Stereo), &Mach1TranscodeConstantsInternal::M1SpatialS2Stereo},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::Stereo_Cinema), &Mach1TranscodeConstantsInternal::M1Spatial2Stereo_Cinema},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::Stereo_Cinema), &Mach1TranscodeConstantsInternal::M1SpatialS2Stereo_Cinema},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::FiveOh), &Mach1TranscodeConstantsInternal::M1Spatial2FiveOh},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::FiveOh), &Mach1TranscodeConstantsInternal::M1SpatialS2FiveOh},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::FiveOneFilm), &Mach1TranscodeConstantsInternal::M1Spatial2FiveOneFilm},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::FiveOneFilm), &Mach1TranscodeConstantsInternal::M1SpatialS2FiveOneFilm},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::FiveOneFilm_Cinema), &Mach1TranscodeConstantsInternal::M1Spatial2FiveOneFilm_Cinema},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::FiveOneFilm_Cinema), &Mach1TranscodeConstantsInternal::M1SpatialS2FiveOneFilm_Cinema},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::FiveOneSmpte), &Mach1TranscodeConstantsInternal::M1Spatial2FiveOneSmpte},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::FiveOneSmpte), &Mach1TranscodeConstantsInternal::M1SpatialS2FiveOneSmpte},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::FiveOneDts), &Mach1TranscodeConstantsInternal::M1Spatial2FiveOneDts},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::FiveOneDts), &Mach1TranscodeConstantsInternal::M1SpatialS2FiveOneDts},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::SevenOnePt), &Mach1TranscodeConstantsInternal::M1Spatial2SevenOnePt},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::SevenOnePt), &Mach1TranscodeConstantsInternal::M1SpatialS2SevenOnePt},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::SevenOnePt_Cinema), &Mach1TranscodeConstantsInternal::M1Spatial2SevenOnePt_Cinema},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::SevenOnePt_Cinema), &Mach1TranscodeConstantsInternal::M1SpatialS2SevenOnePt_Cinema},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::SevenZero_Cinema), &Mach1TranscodeConstantsInternal::M1Spatial2SevenZero_Cinema},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::SevenZero_Cinema), &Mach1TranscodeConstantsInternal::M1SpatialS2SevenZero_Cinema},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::SevenOneSDDS), &Mach1TranscodeConstantsInternal::M1Spatial2SevenOneSDDS},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::SevenOneSDDS), &Mach1TranscodeConstantsInternal::M1SpatialS2SevenOneSDDS},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::SevenZeroSDDS), &Mach1TranscodeConstantsInternal::M1Spatial2SevenZeroSDDS},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::SevenZeroSDDS), &Mach1TranscodeConstantsInternal::M1SpatialS2SevenZeroSDDS},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::SevenOneTwo), &Mach1TranscodeConstantsInternal::M1Spatial2SevenOneTwo},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::SevenOneTwo), &Mach1TranscodeConstantsInternal::M1SpatialS2SevenOneTwo},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::SevenZeroTwo), &Mach1TranscodeConstantsInternal::M1Spatial2SevenZeroTwo},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::SevenZeroTwo), &Mach1TranscodeConstantsInternal::M1SpatialS2SevenZeroTwo},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::NineOne), &Mach1TranscodeConstantsInternal::M1Spatial2NineOne},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::NineOne), &Mach1TranscodeConstantsInternal::M1SpatialS2NineOne},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::NineZero), &Mach1TranscodeConstantsInternal::M1Spatial2NineZero},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::NineZero), &Mach1TranscodeConstantsInternal::M1SpatialS2NineZero},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::FiveOneTwo), &Mach1TranscodeConstantsInternal::M1Spatial2FiveOneTwo},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::FiveOneTwo), &Mach1TranscodeConstantsInternal::M1SpatialS2FiveOneTwo},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::FiveZeroTwo), &Mach1TranscodeConstantsInternal::M1Spatial2FiveZeroTwo},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::FiveZeroTwo), &Mach1TranscodeConstantsInternal::M1SpatialS2FiveZeroTwo},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::FiveOneFour), &Mach1TranscodeConstantsInternal::M1Spatial2FiveOneFour},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::FiveOneFour), &Mach1TranscodeConstantsInternal::M1SpatialS2FiveOneFour},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::FiveZeroFour), &Mach1TranscodeConstantsInternal::M1Spatial2FiveZeroFour},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::FiveZeroFour), &Mach1TranscodeConstantsInternal::M1SpatialS2FiveZeroFour},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::SevenOneFour), &Mach1TranscodeConstantsInternal::M1Spatial2SevenOneFour},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::SevenOneFour), &Mach1TranscodeConstantsInternal::M1SpatialS2SevenOneFour},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::SevenZeroFour), &Mach1TranscodeConstantsInternal::M1Spatial2SevenZeroFour},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::SevenZeroFour), &Mach1TranscodeConstantsInternal::M1SpatialS2SevenZeroFour},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::NineOneFour), &Mach1TranscodeConstantsInternal::M1Spatial2NineOneFour},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::NineOneFour), &Mach1TranscodeConstantsInternal::M1SpatialS2NineOneFour},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::NineOneSix), &Mach1TranscodeConstantsInternal::M1Spatial2NineOneSix},
		{std::make_pair(Mach1TranscodeFormats::M1SpatialS, Mach1TranscodeFormats::NineOneSix), &Mach1TranscodeConstantsInternal::M1SpatialS2NineOneSix},
		{std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::MarcoSixteen), &Mach1TranscodeConstantsInternal::M1Spatial2MarcoSixteen},
        {std::make_pair(Mach1TranscodeFormats::ACNSN3DmaxRE1oa, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::ACNSN3DmaxRE1oa2M1Spatial},
        {std::make_pair(Mach1TranscodeFormats::ACNSN3DmaxRE2oa, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::ACNSN3DmaxRE2oa2M1Spatial},
        {std::make_pair(Mach1TranscodeFormats::ACNSN3DmaxRE3oa, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::ACNSN3DmaxRE3oa2M1Spatial},
        {std::make_pair(Mach1TranscodeFormats::ACNSN3DmaxRE4oa, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::ACNSN3DmaxRE4oa2M1Spatial},
        {std::make_pair(Mach1TranscodeFormats::ACNSN3DmaxRE5oa, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::ACNSN3DmaxRE5oa2M1Spatial},
        {std::make_pair(Mach1TranscodeFormats::ACNSN3DmaxRE6oa, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::ACNSN3DmaxRE6oa2M1Spatial},
        {std::make_pair(Mach1TranscodeFormats::ACNSN3DmaxRE7oa, Mach1TranscodeFormats::M1Spatial), &Mach1TranscodeConstantsInternal::ACNSN3DmaxRE7oa2M1Spatial},
        
		{ std::make_pair(Mach1TranscodeFormats::TTPoints, Mach1TranscodeFormats::M1Horizon), NULL },
		{ std::make_pair(Mach1TranscodeFormats::TTPoints, Mach1TranscodeFormats::M1Spatial), NULL },
		{ std::make_pair(Mach1TranscodeFormats::TTPoints, Mach1TranscodeFormats::M1SpatialPlusDef), NULL },
		{ std::make_pair(Mach1TranscodeFormats::TTPoints, Mach1TranscodeFormats::M1SpatialPlusPlusDef), NULL },
		{ std::make_pair(Mach1TranscodeFormats::TTPoints, Mach1TranscodeFormats::M1SpatialExtendedDef), NULL },
		{ std::make_pair(Mach1TranscodeFormats::TTPoints, Mach1TranscodeFormats::M1SpatialExtendedPlusDef), NULL },

		{ std::make_pair(Mach1TranscodeFormats::M1Horizon, Mach1TranscodeFormats::TTPoints), NULL },
		{ std::make_pair(Mach1TranscodeFormats::M1Spatial, Mach1TranscodeFormats::TTPoints), NULL },
		{ std::make_pair(Mach1TranscodeFormats::M1SpatialPlusDef, Mach1TranscodeFormats::TTPoints), NULL },
		{ std::make_pair(Mach1TranscodeFormats::M1SpatialPlusPlusDef, Mach1TranscodeFormats::TTPoints), NULL },
		{ std::make_pair(Mach1TranscodeFormats::M1SpatialExtendedDef, Mach1TranscodeFormats::TTPoints), NULL },
		{ std::make_pair(Mach1TranscodeFormats::M1SpatialExtendedPlusDef, Mach1TranscodeFormats::TTPoints), NULL },
	};
};

//TODO: 10.2, 12.2, 11.1, 22.2
//10.2/12.2: https://en.wikipedia.org/wiki/10.2_surround_sound
//22.2: https://en.wikipedia.org/wiki/22.2_surround_sound
//FL, FR, FC, LFE1, BL, BR, FLc, FRc, BC, LFE2, SiL (side left), SiR, TpFL, TpFR, TpFC, TpC, TpBL, TpBR, TpSiL, TpSiR, TpBC, BtFC, BtFL, BtFR

class Mach1TranscodeCore
{
private:
	Mach1TranscodeFormats::FormatType inFmt;
	Mach1TranscodeFormats::FormatType outFmt;

	std::vector<Mach1Point3DCore> inTTPoints;
	std::vector<Mach1Point3DCore> outTTPoints;

	float *buffers[Mach1TranscodeConstants::MAXCHANS];
	int bufferSize;

	std::vector<Mach1TranscodeFormats::FormatType> formatsConvertionPath;
	
	M1DSP::Utilities::CSpatialDownmixChecker spatialDownmixChecker;

	std::vector<M1DSP::Filters::CFilterSimpleLP> lpFilters;
	std::vector<int> subChannelIndices;

	void convert(Mach1TranscodeFormats::FormatType inFmt, float** inBufs, Mach1TranscodeFormats::FormatType outFmt, float** outBufs, int numSamples);
	int getNumChannels(Mach1TranscodeFormats::FormatType fmt, bool isInput);

public:

	Mach1TranscodeCore();
	~Mach1TranscodeCore();

	int getInputNumChannels();
	int getOutputNumChannels();
	Mach1TranscodeFormats::FormatType getFormatFromString(char* str);
	char* getFormatName(void * M1obj, Mach1TranscodeFormats::FormatType fmt);

	float calcNormalization(float** bufs, int numSamples);
	void applyMasterGain(float** bufs, int numSamples, float masterGain = 1.0f);

	float db2level(float db);
	float level2db(float level);

	void setLFESub(std::vector<int> subChannelIndices, int sampleRate);
	void setSpatialDownmixer(float corrThreshold = 0.1);
	bool getSpatialDownmixerPossibility();

	void setInputFormat(Mach1TranscodeFormats::FormatType inFmt);
	void setInputFormatADM(char *inXml);
	void setInputFormatTTJson(char *inJson);
	void setInputFormatTTPoints(std::vector<Mach1Point3DCore> points);

	void setOutputFormat(Mach1TranscodeFormats::FormatType outFmt);
	void setOutputFormatTTJson(char* outJson);
	void setOutputFormatTTPoints(std::vector<Mach1Point3DCore> points);

	bool computeConvertionPath();
	void convert(float** inBufs, float** outBufs, int numSamples);

	std::vector<Mach1TranscodeFormats::FormatType>& getFormatsConvertionPath();
};

#endif /* Mach1TranscodeCore_h */
