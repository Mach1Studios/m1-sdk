/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.mach1.spatiallibs;

public class Mach1TranscodeModule {
  public static int getMach1TranscodeMAXCHANS() {
    return Mach1TranscodeModuleJNI.Mach1TranscodeMAXCHANS_get();
  }

  public static SWIGTYPE_p_void Mach1TranscodeCAPI_create() {
    long cPtr = Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_create();
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void Mach1TranscodeCAPI_delete(SWIGTYPE_p_void M1obj) {
    Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_delete(SWIGTYPE_p_void.getCPtr(M1obj));
  }

  public static int Mach1TranscodeCAPI_getInputFormat(SWIGTYPE_p_void M1obj) {
    return Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_getInputFormat(SWIGTYPE_p_void.getCPtr(M1obj));
  }

  public static int Mach1TranscodeCAPI_getOutputFormat(SWIGTYPE_p_void M1obj) {
    return Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_getOutputFormat(SWIGTYPE_p_void.getCPtr(M1obj));
  }

  public static int Mach1TranscodeCAPI_getInputNumChannels(SWIGTYPE_p_void M1obj) {
    return Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_getInputNumChannels(SWIGTYPE_p_void.getCPtr(M1obj));
  }

  public static int Mach1TranscodeCAPI_getOutputNumChannels(SWIGTYPE_p_void M1obj) {
    return Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_getOutputNumChannels(SWIGTYPE_p_void.getCPtr(M1obj));
  }

  public static int Mach1TranscodeCAPI_getFormatFromString(SWIGTYPE_p_void M1obj, String str) {
    return Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_getFormatFromString(SWIGTYPE_p_void.getCPtr(M1obj), str);
  }

  public static String Mach1TranscodeCAPI_getFormatName(SWIGTYPE_p_void M1obj, int fmt) {
    return Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_getFormatName(SWIGTYPE_p_void.getCPtr(M1obj), fmt);
  }

  public static SWIGTYPE_p_p_char Mach1TranscodeCAPI_getAllFormatNames(SWIGTYPE_p_void M1obj) {
    long cPtr = Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_getAllFormatNames(SWIGTYPE_p_void.getCPtr(M1obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static int Mach1TranscodeCAPI_getFormatsCount(SWIGTYPE_p_void M1obj) {
    return Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_getFormatsCount(SWIGTYPE_p_void.getCPtr(M1obj));
  }

  public static float Mach1TranscodeCAPI_processNormalization(SWIGTYPE_p_void M1obj, SWIGTYPE_p_p_float bufs, int numSamples) {
    return Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_processNormalization(SWIGTYPE_p_void.getCPtr(M1obj), SWIGTYPE_p_p_float.getCPtr(bufs), numSamples);
  }

  public static void Mach1TranscodeCAPI_processMasterGain(SWIGTYPE_p_void M1obj, SWIGTYPE_p_p_float bufs, int numSamples, float masterGain) {
    Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_processMasterGain(SWIGTYPE_p_void.getCPtr(M1obj), SWIGTYPE_p_p_float.getCPtr(bufs), numSamples, masterGain);
  }

  public static float Mach1TranscodeCAPI_db2level(SWIGTYPE_p_void M1obj, float db) {
    return Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_db2level(SWIGTYPE_p_void.getCPtr(M1obj), db);
  }

  public static float Mach1TranscodeCAPI_level2db(SWIGTYPE_p_void M1obj, float level) {
    return Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_level2db(SWIGTYPE_p_void.getCPtr(M1obj), level);
  }

  public static void Mach1TranscodeCAPI_setLFESub(SWIGTYPE_p_void M1obj, SWIGTYPE_p_int subChannelIndices, int numChannels, int sampleRate) {
    Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_setLFESub(SWIGTYPE_p_void.getCPtr(M1obj), SWIGTYPE_p_int.getCPtr(subChannelIndices), numChannels, sampleRate);
  }

  public static void Mach1TranscodeCAPI_setSpatialDownmixer(SWIGTYPE_p_void M1obj, float corrThreshold) {
    Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_setSpatialDownmixer(SWIGTYPE_p_void.getCPtr(M1obj), corrThreshold);
  }

  public static boolean Mach1TranscodeCAPI_getSpatialDownmixerPossibility(SWIGTYPE_p_void M1obj) {
    return Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_getSpatialDownmixerPossibility(SWIGTYPE_p_void.getCPtr(M1obj));
  }

  public static SWIGTYPE_p_float Mach1TranscodeCAPI_getAvgSamplesDiff(SWIGTYPE_p_void M1obj) {
    long cPtr = Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_getAvgSamplesDiff(SWIGTYPE_p_void.getCPtr(M1obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public static void Mach1TranscodeCAPI_setInputFormat(SWIGTYPE_p_void M1obj, int inFmt) {
    Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_setInputFormat(SWIGTYPE_p_void.getCPtr(M1obj), inFmt);
  }

  public static void Mach1TranscodeCAPI_setInputFormatCustomPointsJson(SWIGTYPE_p_void M1obj, String inJson) {
    Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_setInputFormatCustomPointsJson(SWIGTYPE_p_void.getCPtr(M1obj), inJson);
  }

  public static void Mach1TranscodeCAPI_setInputFormatCustomPoints(SWIGTYPE_p_void M1obj, Mach1Point3D points, int count) {
    Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_setInputFormatCustomPoints(SWIGTYPE_p_void.getCPtr(M1obj), Mach1Point3D.getCPtr(points), points, count);
  }

  public static void Mach1TranscodeCAPI_setOutputFormat(SWIGTYPE_p_void M1obj, int outFmt) {
    Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_setOutputFormat(SWIGTYPE_p_void.getCPtr(M1obj), outFmt);
  }

  public static void Mach1TranscodeCAPI_setOutputFormatCustomPointsJson(SWIGTYPE_p_void M1obj, String outJson) {
    Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_setOutputFormatCustomPointsJson(SWIGTYPE_p_void.getCPtr(M1obj), outJson);
  }

  public static void Mach1TranscodeCAPI_setOutputFormatCustomPoints(SWIGTYPE_p_void M1obj, Mach1Point3D points, int count) {
    Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_setOutputFormatCustomPoints(SWIGTYPE_p_void.getCPtr(M1obj), Mach1Point3D.getCPtr(points), points, count);
  }

  public static void Mach1TranscodeCAPI_setCustomPointsSamplerCallback(SWIGTYPE_p_void M1obj, SWIGTYPE_p_f_long_long_r_int__p_Mach1Point3D callback) {
    Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_setCustomPointsSamplerCallback(SWIGTYPE_p_void.getCPtr(M1obj), SWIGTYPE_p_f_long_long_r_int__p_Mach1Point3D.getCPtr(callback));
  }

  public static boolean Mach1TranscodeCAPI_processConversionPath(SWIGTYPE_p_void M1obj) {
    return Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_processConversionPath(SWIGTYPE_p_void.getCPtr(M1obj));
  }

  public static void Mach1TranscodeCAPI_getMatrixConversion(SWIGTYPE_p_void M1obj, SWIGTYPE_p_float matrix) {
    Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_getMatrixConversion(SWIGTYPE_p_void.getCPtr(M1obj), SWIGTYPE_p_float.getCPtr(matrix));
  }

  public static void Mach1TranscodeCAPI_processConversion(SWIGTYPE_p_void M1obj, SWIGTYPE_p_p_float inBufs, SWIGTYPE_p_p_float outBufs, int numSamples) {
    Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_processConversion(SWIGTYPE_p_void.getCPtr(M1obj), SWIGTYPE_p_p_float.getCPtr(inBufs), SWIGTYPE_p_p_float.getCPtr(outBufs), numSamples);
  }

  public static SWIGTYPE_p_int Mach1TranscodeCAPI_getFormatConversionPath(SWIGTYPE_p_void M1obj, SWIGTYPE_p_int count) {
    long cPtr = Mach1TranscodeModuleJNI.Mach1TranscodeCAPI_getFormatConversionPath(SWIGTYPE_p_void.getCPtr(M1obj), SWIGTYPE_p_int.getCPtr(count));
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

}
